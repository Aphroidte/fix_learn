<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="3485px" preserveAspectRatio="none" style="width:3180px;height:3485px;background:#FFFFFF;" version="1.1" viewBox="0 0 3180 3485" width="3180px" zoomAndPan="magnify"><defs/><g><!--MD5=[8c41d4c1731e235c323addd6b0640e8b]
cluster 会话逻辑层--><g id="cluster_会话逻辑层"><path d="M1821,6 L1897,6 A3.75,3.75 0 0 1 1899.5,8.5 L1906.5,31.1201 L2903,31.1201 A2.5,2.5 0 0 1 2905.5,33.6201 L2905.5,2032.5 A2.5,2.5 0 0 1 2903,2035 L1821,2035 A2.5,2.5 0 0 1 1818.5,2032.5 L1818.5,8.5 A2.5,2.5 0 0 1 1821,6 " fill="#DDDDDD" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1818.5" x2="1906.5" y1="31.1201" y2="31.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="75" x="1822.5" y="24.0439">会话逻辑层</text></g><!--MD5=[46c6491d4b0416edede1d2b4a31ff915]
cluster 会话消息与序列号管理--><g id="cluster_会话消息与序列号管理"><path d="M280,950.5 L431,950.5 A3.75,3.75 0 0 1 433.5,953 L440.5,975.6201 L1792,975.6201 A2.5,2.5 0 0 1 1794.5,978.1201 L1794.5,3475.5 A2.5,2.5 0 0 1 1792,3478 L280,3478 A2.5,2.5 0 0 1 277.5,3475.5 L277.5,953 A2.5,2.5 0 0 1 280,950.5 " fill="#DDDDDD" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="277.5" x2="440.5" y1="975.6201" y2="975.6201"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="150" x="281.5" y="968.5439">会话消息与序列号管理</text></g><!--MD5=[2ca1536628238a7dc78c5d90808014f9]
class Session--><g id="elem_Session"><rect codeLine="6" fill="#F1F1F1" height="1974.6514" id="Session" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="645" x="2244" y="44"/><ellipse cx="2537.25" cy="60" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M2535.8281,65.3594 Q2533.9688,65.3594 2532.875,63.9688 Q2531.7813,62.5781 2531.7813,59.5938 Q2531.7813,57.0625 2532.9453,55.4063 Q2534.1094,53.75 2536.0938,53.75 Q2537.5625,53.75 2538.0313,53.875 Q2538.5,54.0781 2538.5,54.0781 Q2538.5,54.0781 2538.5,54.0078 Q2538.5,53.9375 2539.1094,53.0156 L2540.1563,56.6719 L2538.8281,57.0781 Q2538.3594,55.5313 2537.6953,54.8672 Q2537.0313,54.2031 2535.9688,54.2031 Q2535.5781,54.2031 2534.8125,55.7344 Q2534.0469,57.2656 2534.0469,59.5156 Q2534.0469,61.9844 2534.7109,63.375 Q2535.375,64.7656 2535.9063,64.7656 Q2536.9688,64.7656 2537.7266,64 Q2538.4844,63.2344 2538.8281,61.5781 L2540.1563,62.1719 Q2539.8281,63.5781 2538.9297,64.4688 Q2538.0313,65.3594 2535.8281,65.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="2557.75" y="66.4839">Session</text><line style="stroke:#181818;stroke-width:0.5;" x1="2245" x2="2888" y1="76" y2="76"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="84"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="2264" y="96.0439">m_application : Application&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="103.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="2264" y="115.1641">m_sessionID : SessionID</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="122.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="2264" y="134.2842">m_state : SessionState</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="141.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="2264" y="153.4043">m_pResponder : Responder*</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="160.4805" y2="160.4805"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="168.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="2264" y="180.5244">m_dataDictionaryProvider : DataDictionaryProvider</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="187.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="2264" y="199.6445">m_messageStoreFactory : MessageStoreFactory&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="206.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="2264" y="218.7646">m_pLogFactory : LogFactory*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="225.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="2264" y="237.8848">m_mutex : Mutex</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="244.9609" y2="244.9609"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="252.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="251" x="2264" y="265.0049">s_sessions : map&lt;SessionID, Session*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="272.0811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="2264" y="284.125">s_sessionIDs : set&lt;SessionID&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="291.2012"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="260" x="2264" y="303.2451">s_registered : map&lt;SessionID, Session*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="310.3213"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="101" x="2264" y="322.3652">s_mutex : Mutex</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="329.4414" y2="329.4414"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="337.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="2264" y="349.4854">m_sessionTime : TimeRange</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="356.5615"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="2264" y="368.6055">m_logonTime : TimeRange</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="375.6816"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="2264" y="387.7256">m_senderDefaultApplVerID : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="394.8018"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="2264" y="406.8457">m_targetDefaultApplVerID : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="413.9219"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="2264" y="425.9658">m_sendRedundantResendRequests : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="433.042"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="2264" y="445.0859">m_checkCompId : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="452.1621"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="2264" y="464.2061">m_checkLatency : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="471.2822"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="2264" y="483.3262">m_maxLatency : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="490.4023"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="2264" y="502.4463">m_resetOnLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="509.5225"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="2264" y="521.5664">m_resetOnLogout : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="528.6426"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="2264" y="540.6865">m_resetOnDisconnect : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="547.7627"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="2264" y="559.8066">m_refreshOnLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="566.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="2264" y="578.9268">m_timestampPrecision : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="586.0029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="2264" y="598.0469">m_persistMessages : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="605.123"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="2264" y="617.167">m_validateLengthAndCheckSum : bool</text><line style="stroke:#181818;stroke-width:1.0;" x1="2245" x2="2888" y1="624.2432" y2="624.2432"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="632.2432"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="2264" y="644.2871">send(Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="651.3633"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="2264" y="663.4072">send(const string&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="670.4834"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="2264" y="682.5273">sendRaw(Message&amp;, int = 0) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="689.6035"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="2264" y="701.6475">resend(Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="708.7236"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="2264" y="720.7676">shouleSendReset() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="727.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2264" y="739.8877">disconnect() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="746.9639"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="2264" y="759.0078">generateLogon() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="766.084"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="2264" y="778.1279">generateLogon(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="785.2041"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="2264" y="797.248">generateResendRequest(const BeginString&amp;, const MsgSeqNum&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="804.3242"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="2264" y="816.3682">generateSequenceReset(int, int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="823.4443"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="2264" y="835.4883">generateHeartbeat() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="842.5645"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="2264" y="854.6084">generateHeartbeat(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="861.6846"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="2264" y="873.7285">generateTestRequest(const std::string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="880.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="2264" y="892.8486">generateReject(const Message&amp;, int, int = 0) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="899.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="2264" y="911.9688">generateReject(const Message&amp;, const std::string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="919.0449"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="2264" y="931.0889">generateBusinessReject(const Message&amp;, int, int = 0) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="938.165"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="2264" y="950.209">generateLogout( const std::string&amp;= "") : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="957.2852"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="2264" y="969.3291">populateRejectReason(Message&amp;, int, const std::string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="976.4053"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="375" x="2264" y="988.4492">populateRejectReason(Message&amp;, const std::string&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="995.5254" y2="995.5254"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1003.5254"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="2264" y="1015.5693">next() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1022.6455"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="2264" y="1034.6895">next(const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1041.7656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="2264" y="1053.8096">next(const string&amp;, const UtcTimeStamp&amp;, bool = false) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1060.8857"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="2264" y="1072.9297">next(const Message&amp;, const UtcTimeStamp&amp;, bool = false) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1080.0059"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="2264" y="1092.0498">verfy(const Message&amp;, bool = true, bool = true) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1099.126"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="465" x="2264" y="1111.1699">fromCallback(const MsgType&amp;, const Message&amp;, const SessionID&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1118.2461"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="2264" y="1130.29">nextLogon(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1137.3662"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="368" x="2264" y="1149.4102">nextLogout(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1156.4863"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="2264" y="1168.5303">nextHeartbeat(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1175.6064"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="2264" y="1187.6504">nextTestRequest(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1194.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="2264" y="1206.7705">nextReject(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1213.8467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425" x="2264" y="1225.8906">nextSequenceReset(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1232.9668"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="426" x="2264" y="1245.0107">nextResendRequest(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1252.0869"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="2264" y="1264.1309">nextQueued(int, const UtcTimeStamp&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1271.207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="2264" y="1283.251">nextQueued(const UtcTimeStamp&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="1290.3271" y2="1290.3271"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1298.3271"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="2264" y="1310.3711">persist(const Message&amp;, const string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1317.4473"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="2264" y="1329.4912">setNextSenderMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1336.5674"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="2264" y="1348.6113">SetNextTargetMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1355.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="2264" y="1367.7314">getExpectedSenderNum() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1374.8076"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="2264" y="1386.8516">getExpectedTargetNum() : int</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="1393.9277" y2="1393.9277"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1401.9277"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="2264" y="1413.9717">doBadTime(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1421.0479"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="2264" y="1433.0918">doBadCompID(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1440.168"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="2264" y="1452.2119">doPossDup(const Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1459.2881"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="2264" y="1471.332">doTargetTooLow(const Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1478.4082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="2264" y="1490.4521">doTargetTooHight(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1497.5283"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="2264" y="1509.5723">insertSendingTime(Header&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1516.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="511" x="2264" y="1528.6924">insertOrigSendingTime(Header&amp;, const UtcTimeStamp&amp; = UtcTimeStamp()) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1535.7686"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2264" y="1547.8125">fill(Header&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="1554.8887" y2="1554.8887"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1562.8887"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="2264" y="1574.9326">reset() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1582.0088"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="2264" y="1594.0527">sendToTarget(Message&amp;, const string&amp; = "") : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1601.1289"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="2264" y="1613.1729">sendToTarget(Message&amp;, cosnt SessionID&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1620.249"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="619" x="2264" y="1632.293">sendToTarget(Message&amp;, const SenderCompID&amp;, const TargetCompID&amp;, const string&amp; = "") : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1639.3691"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="501" x="2264" y="1651.4131">sendToTarget(Message&amp;, const string&amp;, const string&amp;, const string&amp; = "") : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1658.4893"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="197" x="2264" y="1670.5332">getSessions() : set&lt;SessoinID&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1677.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="279" x="2264" y="1689.6533">lookupSession(const SessionID&amp;) : Session*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1696.7295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="332" x="2264" y="1708.7734">lookupSession(const string&amp;, bool = false) : Session*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1715.8496"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="288" x="2264" y="1727.8936">isSessionRegistered(const SessionID&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1734.9697"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="289" x="2264" y="1747.0137">registerSession(const SessionID&amp;) : Session&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1754.0898"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="234" x="2264" y="1766.1338">unregisterSession(const SessionID&amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1773.21"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="2264" y="1785.2539">numSessions() : size_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1792.3301"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="2264" y="1804.374">addSession(Sessioni&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1811.4502"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="204" x="2264" y="1823.4941">removeSession(Session&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="1830.5703" y2="1830.5703"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1838.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="2264" y="1850.6143">logon() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1857.6904"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="2264" y="1869.7344">logout(const string&amp; = "") : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1876.8105"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="2264" y="1888.8545">isEnable() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1895.9307"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="2264" y="1907.9746">sentLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1915.0508"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="2264" y="1927.0947">sentLogout() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1934.1709"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="2264" y="1946.2148">receivedLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1953.291"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="2264" y="1965.335">isLoggedOn() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1972.4111"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="2264" y="1984.4551">refresh() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="2245" x2="2888" y1="1991.5313" y2="1991.5313"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2252" y="1999.5313"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="2264" y="2011.5752">getter &amp; setter</text></g><!--MD5=[2242c43c330acc437358859ea7f59776]
class SessionState--><g id="elem_SessionState"><rect codeLine="123" fill="#F1F1F1" height="1631.8496" id="SessionState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="324" x="1834.5" y="215.5"/><ellipse cx="1950.75" cy="231.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1949.3281,236.8594 Q1947.4688,236.8594 1946.375,235.4688 Q1945.2813,234.0781 1945.2813,231.0938 Q1945.2813,228.5625 1946.4453,226.9063 Q1947.6094,225.25 1949.5938,225.25 Q1951.0625,225.25 1951.5313,225.375 Q1952,225.5781 1952,225.5781 Q1952,225.5781 1952,225.5078 Q1952,225.4375 1952.6094,224.5156 L1953.6563,228.1719 L1952.3281,228.5781 Q1951.8594,227.0313 1951.1953,226.3672 Q1950.5313,225.7031 1949.4688,225.7031 Q1949.0781,225.7031 1948.3125,227.2344 Q1947.5469,228.7656 1947.5469,231.0156 Q1947.5469,233.4844 1948.2109,234.875 Q1948.875,236.2656 1949.4063,236.2656 Q1950.4688,236.2656 1951.2266,235.5 Q1951.9844,234.7344 1952.3281,233.0781 L1953.6563,233.6719 Q1953.3281,235.0781 1952.4297,235.9688 Q1951.5313,236.8594 1949.3281,236.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="1971.25" y="237.9839">SessionState</text><line style="stroke:#181818;stroke-width:0.5;" x1="1835.5" x2="2157.5" y1="247.5" y2="247.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="255.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="1854.5" y="267.5439">m_enabled : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="274.6201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="1854.5" y="286.6641">m_receivedLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="293.7402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1854.5" y="305.7842">m_sentLogout : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="312.8604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1854.5" y="324.9043">m_sentLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="331.9805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1854.5" y="344.0244">m_sentReset : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="351.1006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="1854.5" y="363.1445">m_receivedReset : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="370.2207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="1854.5" y="382.2646">m_initiate : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="389.3408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1854.5" y="401.3848">m_logonTimeout : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="408.4609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="1854.5" y="420.5049">m_logoutTimeout : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="427.5811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1854.5" y="439.625">m_testRequest : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="446.7012"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="1854.5" y="458.7451">m_resendRange : ResendRange</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="465.8213"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1854.5" y="477.8652">m_heartBtInt : HeartBtInt</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="484.9414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="1854.5" y="496.9854">m_lastSentTime : UtcTimeStamp</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="504.0615"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1854.5" y="516.1055">m_lastReceivedTime : UtcTimeStamp</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="523.1816"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1854.5" y="535.2256">m_logoutReason : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="542.3018"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="1854.5" y="554.3457">m_queue : map&lt;int, Message&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="561.4219"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1854.5" y="573.4658">m_pStore : MessageStore*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="580.542"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="1854.5" y="592.5859">m_pLog : Log*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="599.6621"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="1854.5" y="611.7061">m_nullLog : NullLog</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="618.7822"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="1854.5" y="630.8262">m_mutex : Mutex</text><line style="stroke:#181818;stroke-width:1.0;" x1="1835.5" x2="2157.5" y1="637.9023" y2="637.9023"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="645.9023"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="1854.5" y="657.9463">getNextSenderMsgSeqNum() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="665.0225"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="1854.5" y="677.0664">getNextTargetMsgSeqNum() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="684.1426"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1854.5" y="696.1865">setNextSenderMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="703.2627"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1854.5" y="715.3066">setNextTargetMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="722.3828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="1854.5" y="734.4268">incrNextSenderMsgSeqNum() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="741.5029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1854.5" y="753.5469">incrNextTargetMsgSeqNum() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="760.623"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="1854.5" y="772.667">queue(int, const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="779.7432"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="1854.5" y="791.7871">retrieve(int, Message&amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="798.8633"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1854.5" y="810.9072">clearQueue() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1835.5" x2="2157.5" y1="817.9834" y2="817.9834"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="825.9834"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="1854.5" y="838.0273">onIncoming() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="845.1035"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="1854.5" y="857.1475">onOutgoing() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="864.2236"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="1854.5" y="876.2676">onEvent() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="883.3438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1854.5" y="895.3877">reset() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="902.4639"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1854.5" y="914.5078">refresh() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="921.584"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="1854.5" y="933.6279">clear() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="940.7041"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="1854.5" y="952.748">backup() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="1835.5" x2="2157.5" y1="959.8242" y2="959.8242"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="967.8242"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="1854.5" y="979.8682">receivedLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="986.9443"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1854.5" y="998.9883">receivedLogon(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1006.0645"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="1854.5" y="1018.1084">sentLogout() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1025.1846"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1854.5" y="1037.2285">sentLogout(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1044.3047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1854.5" y="1056.3486">sentLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1063.4248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="1854.5" y="1075.4688">sentLogon(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1082.5449"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="1854.5" y="1094.5889">receivedReset() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1101.665"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="1854.5" y="1113.709">receivedReset(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1120.7852"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1854.5" y="1132.8291">sentReset() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1139.9053"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="1854.5" y="1151.9492">sentReset(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1159.0254"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="1854.5" y="1171.0693">initiate() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1178.1455"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1854.5" y="1190.1895">initiate(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1197.2656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="1854.5" y="1209.3096">logonTimeout() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1216.3857"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="1854.5" y="1228.4297">logonTimeout(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1235.5059"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="1854.5" y="1247.5498">logoutTimeout() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1254.626"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="1854.5" y="1266.6699">logoutTimeout() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1273.7461"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1854.5" y="1285.79">testRequest() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1292.8662"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="1854.5" y="1304.9102">testRequest(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1311.9863"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="1854.5" y="1324.0303">resendRequested() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1331.1064"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="1854.5" y="1343.1504">resendRange() : pair&lt;int, int&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1350.2266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="1854.5" y="1362.2705">resendRage(int, int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1369.3467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="1854.5" y="1381.3906">store() : MessageStore*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1388.4668"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="1854.5" y="1400.5107">store(MessageStore) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1407.5869"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="1854.5" y="1419.6309">log() : Log*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1426.707"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="1854.5" y="1438.751">log(Log*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1445.8271"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="1854.5" y="1457.8711">heartBtInt() : HeartBtInt&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1464.9473"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="1854.5" y="1476.9912">heartBtInt() : const HeartBtInt&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1484.0674"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="1854.5" y="1496.1113">heartBtInt(cosnt HeartBtInt) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1503.1875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="1854.5" y="1515.2314">lastSendTime(const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1522.3076"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="1854.5" y="1534.3516">lastSendTime() : UtcTimeStamp</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1541.4277"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="1854.5" y="1553.4717">lastReceivedTime(const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1560.5479"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="1854.5" y="1572.5918">lastReceivedTime() : UtcTimeStamp</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1579.668"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="1854.5" y="1591.7119">lastReceivedTime() : const UtcTimeStamp</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1598.7881"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="1854.5" y="1610.832">shouleSendLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1617.9082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="1854.5" y="1629.9521">alreadySendLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1637.0283"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="1854.5" y="1649.0723">logonTimedOut() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1656.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="1854.5" y="1668.1924">logoutTimedOut() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1675.2686"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="1854.5" y="1687.3125">withinHeartBeat() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1694.3887"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="1854.5" y="1706.4326">timedOut() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1713.5088"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="1854.5" y="1725.5527">needHeartbeat() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1732.6289"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="1854.5" y="1744.6729">needTestRequest() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1751.749"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="1854.5" y="1763.793">logoutReason() : string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1770.8691"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="1854.5" y="1782.9131">logoutReson (const string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1789.9893"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="1854.5" y="1802.0332">set(int, string&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1809.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="1854.5" y="1821.1533">get(int, int, vector&lt;string&gt;&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1842.5" y="1828.2295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="1854.5" y="1840.2734">getCreateionTime() : UtcTimeStamp</text></g><!--MD5=[d72449d1c43038d257a52222c974564c]
class MessageStore--><g id="elem_MessageStore"><rect codeLine="220" fill="#F1F1F1" height="258.3213" id="MessageStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="262" x="1069.5" y="2129"/><ellipse cx="1150.25" cy="2145" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1146.8438,2139.2813 L1146.8438,2138.875 L1153.1563,2138.875 L1153.1563,2139.2813 L1150.625,2139.2813 Q1150.625,2139.2813 1150.7734,2139.4141 Q1150.9219,2139.5469 1150.9219,2139.8125 L1150.9219,2149.2969 Q1150.9219,2149.5625 1151.1406,2149.6953 Q1151.3594,2149.8281 1151.3594,2149.8281 L1153.1563,2149.8281 L1153.1563,2150.2344 L1146.8438,2150.2344 L1146.8438,2149.8281 L1148.375,2149.8281 Q1148.7031,2149.8281 1148.8359,2149.6953 Q1148.9688,2149.5625 1148.9688,2149.2969 L1148.9688,2139.8125 Q1148.9688,2139.5469 1148.8359,2139.4141 Q1148.7031,2139.2813 1148.375,2139.2813 L1146.8438,2139.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="92" x="1170.75" y="2151.4839">MessageStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="1070.5" x2="1330.5" y1="2161" y2="2161"/><line style="stroke:#181818;stroke-width:0.5;" x1="1070.5" x2="1330.5" y1="2169" y2="2169"/><ellipse cx="1080.5" cy="2180" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="173" x="1089.5" y="2189.0439">set(int, const string&amp;) : bool</text><ellipse cx="1080.5" cy="2199.1201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="211" x="1089.5" y="2208.1641">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="1080.5" cy="2218.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="212" x="1089.5" y="2227.2842">getNextSenderMsgSeqNum() : int</text><ellipse cx="1080.5" cy="2237.3604" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="208" x="1089.5" y="2246.4043">getNextTargetMsgSeqNum() : int</text><ellipse cx="1080.5" cy="2256.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="236" x="1089.5" y="2265.5244">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="1080.5" cy="2275.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="232" x="1089.5" y="2284.6445">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="1080.5" cy="2294.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="225" x="1089.5" y="2303.7646">incrNextSenderMsgSeqNum() : void</text><ellipse cx="1080.5" cy="2313.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="221" x="1089.5" y="2322.8848">incrNextTargetMsgSeqNum() : void</text><ellipse cx="1080.5" cy="2332.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="227" x="1089.5" y="2342.0049">getCreateionTime() : UtcTimeStamp</text><ellipse cx="1080.5" cy="2352.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="79" x="1089.5" y="2361.125">reset() : void</text><ellipse cx="1080.5" cy="2371.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="92" x="1089.5" y="2380.2451">refresh() : void</text></g><!--MD5=[b8847165ef77eb0382d01d47c11b7649]
class MessageStoreFactory--><g id="elem_MessageStoreFactory"><rect codeLine="236" fill="#F1F1F1" height="86.2402" id="MessageStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="296" x="805.5" y="988.5"/><ellipse cx="879.25" cy="1004.5" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M875.8438,998.7813 L875.8438,998.375 L882.1563,998.375 L882.1563,998.7813 L879.625,998.7813 Q879.625,998.7813 879.7734,998.9141 Q879.9219,999.0469 879.9219,999.3125 L879.9219,1008.7969 Q879.9219,1009.0625 880.1406,1009.1953 Q880.3594,1009.3281 880.3594,1009.3281 L882.1563,1009.3281 L882.1563,1009.7344 L875.8438,1009.7344 L875.8438,1009.3281 L877.375,1009.3281 Q877.7031,1009.3281 877.8359,1009.1953 Q877.9688,1009.0625 877.9688,1008.7969 L877.9688,999.3125 Q877.9688,999.0469 877.8359,998.9141 Q877.7031,998.7813 877.375,998.7813 L875.8438,998.7813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="899.75" y="1010.9839">MessageStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="806.5" x2="1100.5" y1="1020.5" y2="1020.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="806.5" x2="1100.5" y1="1028.5" y2="1028.5"/><ellipse cx="816.5" cy="1039.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="270" x="825.5" y="1048.5439">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="816.5" cy="1058.6201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="191" x="825.5" y="1067.6641">destroy(MessageStore*) : void</text></g><!--MD5=[79b8afc0d503439fba9935c5662d7215]
class FileStoreFactory--><g id="elem_FileStoreFactory"><rect codeLine="243" fill="#F1F1F1" height="124.4805" id="FileStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="293.5" y="2196"/><ellipse cx="383.75" cy="2212" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M382.3281,2217.3594 Q380.4688,2217.3594 379.375,2215.9688 Q378.2813,2214.5781 378.2813,2211.5938 Q378.2813,2209.0625 379.4453,2207.4063 Q380.6094,2205.75 382.5938,2205.75 Q384.0625,2205.75 384.5313,2205.875 Q385,2206.0781 385,2206.0781 Q385,2206.0781 385,2206.0078 Q385,2205.9375 385.6094,2205.0156 L386.6563,2208.6719 L385.3281,2209.0781 Q384.8594,2207.5313 384.1953,2206.8672 Q383.5313,2206.2031 382.4688,2206.2031 Q382.0781,2206.2031 381.3125,2207.7344 Q380.5469,2209.2656 380.5469,2211.5156 Q380.5469,2213.9844 381.2109,2215.375 Q381.875,2216.7656 382.4063,2216.7656 Q383.4688,2216.7656 384.2266,2216 Q384.9844,2215.2344 385.3281,2213.5781 L386.6563,2214.1719 Q386.3281,2215.5781 385.4297,2216.4688 Q384.5313,2217.3594 382.3281,2217.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="404.25" y="2218.4839">FileStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="294.5" x2="586.5" y1="2228" y2="2228"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="301.5" y="2236"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="313.5" y="2248.0439">m_path : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="301.5" y="2255.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="313.5" y="2267.1641">m_settings : SessionSettings</text><line style="stroke:#181818;stroke-width:0.5;" x1="294.5" x2="586.5" y1="2274.2402" y2="2274.2402"/><ellipse cx="304.5" cy="2285.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="313.5" y="2294.2842">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="304.5" cy="2304.3604" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="313.5" y="2313.4043">destroy(MessageStore*) : void</text></g><!--MD5=[000865ccd26c04f1fbf7d019843446a7]
class FileStore--><g id="elem_FileStore"><rect codeLine="254" fill="#F1F1F1" height="553.123" id="FileStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="471.5" y="2495"/><ellipse cx="568.75" cy="2511" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M567.3281,2516.3594 Q565.4688,2516.3594 564.375,2514.9688 Q563.2813,2513.5781 563.2813,2510.5938 Q563.2813,2508.0625 564.4453,2506.4063 Q565.6094,2504.75 567.5938,2504.75 Q569.0625,2504.75 569.5313,2504.875 Q570,2505.0781 570,2505.0781 Q570,2505.0781 570,2505.0078 Q570,2504.9375 570.6094,2504.0156 L571.6563,2507.6719 L570.3281,2508.0781 Q569.8594,2506.5313 569.1953,2505.8672 Q568.5313,2505.2031 567.4688,2505.2031 Q567.0781,2505.2031 566.3125,2506.7344 Q565.5469,2508.2656 565.5469,2510.5156 Q565.5469,2512.9844 566.2109,2514.375 Q566.875,2515.7656 567.4063,2515.7656 Q568.4688,2515.7656 569.2266,2515 Q569.9844,2514.2344 570.3281,2512.5781 L571.6563,2513.1719 Q571.3281,2514.5781 570.4297,2515.4688 Q569.5313,2516.3594 567.3281,2516.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="589.25" y="2517.4839">FileStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="472.5" x2="730.5" y1="2527" y2="2527"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2535"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="491.5" y="2547.0439">m_cache : MemoryStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2554.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="491.5" y="2566.1641">m_offsets : map&lt;int, pair&lt;int, int&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2573.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="491.5" y="2585.2842">m_msgFileName : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2592.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="491.5" y="2604.4043">m_headerFileName : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2611.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="491.5" y="2623.5244">m_seqNumsFileNmae : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2630.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="491.5" y="2642.6445">m_msgFile : FILE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2649.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="491.5" y="2661.7646">m_headerFile : FILE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2668.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="491.5" y="2680.8848">m_seqNumsFile : FILE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2687.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="491.5" y="2700.0049">m_sessionFile : FILE*</text><line style="stroke:#181818;stroke-width:1.0;" x1="472.5" x2="730.5" y1="2707.0811" y2="2707.0811"/><ellipse cx="482.5" cy="2718.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="491.5" y="2727.125">set(int, const string&amp;) : bool</text><ellipse cx="482.5" cy="2737.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="491.5" y="2746.2451">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="482.5" cy="2756.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="491.5" y="2765.3652">getNextSenderMsgSeqNum() : int</text><ellipse cx="482.5" cy="2775.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="491.5" y="2784.4854">getNextTargetMsgSeqNum() : int</text><ellipse cx="482.5" cy="2794.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="491.5" y="2803.6055">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="482.5" cy="2813.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="491.5" y="2822.7256">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="482.5" cy="2832.8018" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="491.5" y="2841.8457">incrNextSenderMsgSeqNum() : void</text><ellipse cx="482.5" cy="2851.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="491.5" y="2860.9658">incrNextTargetMsgSeqNum() : void</text><ellipse cx="482.5" cy="2871.042" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="491.5" y="2880.0859">getCreateionTime() : UtcTimeStamp</text><ellipse cx="482.5" cy="2890.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="491.5" y="2899.2061">reset() : void</text><ellipse cx="482.5" cy="2909.2822" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="491.5" y="2918.3262">refresh() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="472.5" x2="730.5" y1="2925.4023" y2="2925.4023"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2933.4023"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="491.5" y="2945.4463">open(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2952.5225"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="491.5" y="2964.5664">populateCache() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2971.6426"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="491.5" y="2983.6865">readFromFile(int, int, string&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="2990.7627"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="491.5" y="3002.8066">setSeqNum() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="3009.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="491.5" y="3021.9268">setSession() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="479.5" y="3029.0029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="491.5" y="3041.0469">get(int, string&amp;) : bool</text></g><!--MD5=[411ccd82ca7b474ae6320c7d31367dd6]
class MemoryStore--><g id="elem_MemoryStore"><rect codeLine="288" fill="#F1F1F1" height="334.8018" id="MemoryStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="972.5" y="3127"/><ellipse cx="1056.25" cy="3143" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1054.8281,3148.3594 Q1052.9688,3148.3594 1051.875,3146.9688 Q1050.7813,3145.5781 1050.7813,3142.5938 Q1050.7813,3140.0625 1051.9453,3138.4063 Q1053.1094,3136.75 1055.0938,3136.75 Q1056.5625,3136.75 1057.0313,3136.875 Q1057.5,3137.0781 1057.5,3137.0781 Q1057.5,3137.0781 1057.5,3137.0078 Q1057.5,3136.9375 1058.1094,3136.0156 L1059.1563,3139.6719 L1057.8281,3140.0781 Q1057.3594,3138.5313 1056.6953,3137.8672 Q1056.0313,3137.2031 1054.9688,3137.2031 Q1054.5781,3137.2031 1053.8125,3138.7344 Q1053.0469,3140.2656 1053.0469,3142.5156 Q1053.0469,3144.9844 1053.7109,3146.375 Q1054.375,3147.7656 1054.9063,3147.7656 Q1055.9688,3147.7656 1056.7266,3147 Q1057.4844,3146.2344 1057.8281,3144.5781 L1059.1563,3145.1719 Q1058.8281,3146.5781 1057.9297,3147.4688 Q1057.0313,3148.3594 1054.8281,3148.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1076.75" y="3149.4839">MemoryStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="973.5" x2="1231.5" y1="3159" y2="3159"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="3167"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="992.5" y="3179.0439">m_messages : map&lt;int, string&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="3186.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="992.5" y="3198.1641">m_nextSenderMsgSeqNum : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="3205.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="992.5" y="3217.2842">m_nextTargetMsgSeqNum : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="980.5" y="3224.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="992.5" y="3236.4043">m_creationTime : UtcTimeStamp</text><line style="stroke:#181818;stroke-width:0.5;" x1="973.5" x2="1231.5" y1="3243.4805" y2="3243.4805"/><ellipse cx="983.5" cy="3254.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="992.5" y="3263.5244">set(int, const string&amp;) : bool</text><ellipse cx="983.5" cy="3273.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="992.5" y="3282.6445">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="983.5" cy="3292.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="992.5" y="3301.7646">getNextSenderMsgSeqNum() : int</text><ellipse cx="983.5" cy="3311.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="992.5" y="3320.8848">getNextTargetMsgSeqNum() : int</text><ellipse cx="983.5" cy="3330.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="992.5" y="3340.0049">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="983.5" cy="3350.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="992.5" y="3359.125">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="983.5" cy="3369.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="992.5" y="3378.2451">incrNextSenderMsgSeqNum() : void</text><ellipse cx="983.5" cy="3388.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="992.5" y="3397.3652">incrNextTargetMsgSeqNum() : void</text><ellipse cx="983.5" cy="3407.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="992.5" y="3416.4854">getCreateionTime() : UtcTimeStamp</text><ellipse cx="983.5" cy="3426.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="992.5" y="3435.6055">reset() : void</text><ellipse cx="983.5" cy="3445.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="992.5" y="3454.7256">refresh() : void</text></g><!--MD5=[6ee3a88a70d1091b0f46575b9f500321]
class MySQLStoreFactory--><g id="elem_MySQLStoreFactory"><rect codeLine="310" fill="#F1F1F1" height="315.6816" id="MySQLStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="412" x="1366.5" y="2100"/><ellipse cx="1504.25" cy="2116" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1502.8281,2121.3594 Q1500.9688,2121.3594 1499.875,2119.9688 Q1498.7813,2118.5781 1498.7813,2115.5938 Q1498.7813,2113.0625 1499.9453,2111.4063 Q1501.1094,2109.75 1503.0938,2109.75 Q1504.5625,2109.75 1505.0313,2109.875 Q1505.5,2110.0781 1505.5,2110.0781 Q1505.5,2110.0781 1505.5,2110.0078 Q1505.5,2109.9375 1506.1094,2109.0156 L1507.1563,2112.6719 L1505.8281,2113.0781 Q1505.3594,2111.5313 1504.6953,2110.8672 Q1504.0313,2110.2031 1502.9688,2110.2031 Q1502.5781,2110.2031 1501.8125,2111.7344 Q1501.0469,2113.2656 1501.0469,2115.5156 Q1501.0469,2117.9844 1501.7109,2119.375 Q1502.375,2120.7656 1502.9063,2120.7656 Q1503.9688,2120.7656 1504.7266,2120 Q1505.4844,2119.2344 1505.8281,2117.5781 L1507.1563,2118.1719 Q1506.8281,2119.5781 1505.9297,2120.4688 Q1505.0313,2121.3594 1502.8281,2121.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1524.75" y="2122.4839">MySQLStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="1367.5" x2="1777.5" y1="2132" y2="2132"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2140"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="1386.5" y="2152.0439">m_connectionPoolPtr : MySQLConnectionPoolPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2159.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1386.5" y="2171.1641">m_settings : SessionSettings</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2178.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1386.5" y="2190.2842">m_dictionary : Dictionary</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2197.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="1386.5" y="2209.4043">m_database : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2216.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1386.5" y="2228.5244">m_password : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2235.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="1386.5" y="2247.6445">m_user : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2254.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1386.5" y="2266.7646">m_password : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2273.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1386.5" y="2285.8848">m_host : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2292.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="1386.5" y="2305.0049">m_port : short</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2312.0811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1386.5" y="2324.125">m_useSettings : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2331.2012"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1386.5" y="2343.2451">m_useDictionary : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="1367.5" x2="1777.5" y1="2350.3213" y2="2350.3213"/><ellipse cx="1377.5" cy="2361.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="1386.5" y="2370.3652">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="1377.5" cy="2380.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="1386.5" y="2389.4854">destroy(MessageStore*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1374.5" y="2396.5615"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="1386.5" y="2408.6055">create(const SessionID&amp;, const Dictionary&amp;) : MessageStore*</text></g><!--MD5=[f0cb7611019f770c49ed7fff2e04718f]
class MySQLStore--><g id="elem_MySQLStore"><rect codeLine="330" fill="#F1F1F1" height="334.8018" id="MySQLStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="316" x="1256.5" y="2604"/><ellipse cx="1370.25" cy="2620" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1368.8281,2625.3594 Q1366.9688,2625.3594 1365.875,2623.9688 Q1364.7813,2622.5781 1364.7813,2619.5938 Q1364.7813,2617.0625 1365.9453,2615.4063 Q1367.1094,2613.75 1369.0938,2613.75 Q1370.5625,2613.75 1371.0313,2613.875 Q1371.5,2614.0781 1371.5,2614.0781 Q1371.5,2614.0781 1371.5,2614.0078 Q1371.5,2613.9375 1372.1094,2613.0156 L1373.1563,2616.6719 L1371.8281,2617.0781 Q1371.3594,2615.5313 1370.6953,2614.8672 Q1370.0313,2614.2031 1368.9688,2614.2031 Q1368.5781,2614.2031 1367.8125,2615.7344 Q1367.0469,2617.2656 1367.0469,2619.5156 Q1367.0469,2621.9844 1367.7109,2623.375 Q1368.375,2624.7656 1368.9063,2624.7656 Q1369.9688,2624.7656 1370.7266,2624 Q1371.4844,2623.2344 1371.8281,2621.5781 L1373.1563,2622.1719 Q1372.8281,2623.5781 1371.9297,2624.4688 Q1371.0313,2625.3594 1368.8281,2625.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1390.75" y="2626.4839">MySQLStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="1257.5" x2="1571.5" y1="2636" y2="2636"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1264.5" y="2644"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1276.5" y="2656.0439">m_cache : MemoryStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1264.5" y="2663.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1276.5" y="2675.1641">m_pConnection : MySQLConnection*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1264.5" y="2682.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="1276.5" y="2694.2842">m_pConnectionPool : MySQLConnectionPool*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1264.5" y="2701.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1276.5" y="2713.4043">m_sessionID : SessionID</text><line style="stroke:#181818;stroke-width:0.5;" x1="1257.5" x2="1571.5" y1="2720.4805" y2="2720.4805"/><ellipse cx="1267.5" cy="2731.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1276.5" y="2740.5244">set(int, const string&amp;) : bool</text><ellipse cx="1267.5" cy="2750.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="1276.5" y="2759.6445">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="1267.5" cy="2769.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="1276.5" y="2778.7646">getNextSenderMsgSeqNum() : int</text><ellipse cx="1267.5" cy="2788.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="1276.5" y="2797.8848">getNextTargetMsgSeqNum() : int</text><ellipse cx="1267.5" cy="2807.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1276.5" y="2817.0049">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="1267.5" cy="2827.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1276.5" y="2836.125">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="1267.5" cy="2846.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="1276.5" y="2855.2451">incrNextSenderMsgSeqNum() : void</text><ellipse cx="1267.5" cy="2865.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1276.5" y="2874.3652">incrNextTargetMsgSeqNum() : void</text><ellipse cx="1267.5" cy="2884.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="1276.5" y="2893.4854">getCreateionTime() : UtcTimeStamp</text><ellipse cx="1267.5" cy="2903.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1276.5" y="2912.6055">reset() : void</text><ellipse cx="1267.5" cy="2922.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1276.5" y="2931.7256">refresh() : void</text></g><!--MD5=[2790b2acb5a5e640d4997528ba418bb9]
class OdbcStoreFactory--><g id="elem_OdbcStoreFactory"><rect codeLine="351" fill="#F1F1F1" height="239.2012" id="OdbcStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="412" x="622.5" y="2138.5"/><ellipse cx="766.25" cy="2154.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M764.8281,2159.8594 Q762.9688,2159.8594 761.875,2158.4688 Q760.7813,2157.0781 760.7813,2154.0938 Q760.7813,2151.5625 761.9453,2149.9063 Q763.1094,2148.25 765.0938,2148.25 Q766.5625,2148.25 767.0313,2148.375 Q767.5,2148.5781 767.5,2148.5781 Q767.5,2148.5781 767.5,2148.5078 Q767.5,2148.4375 768.1094,2147.5156 L769.1563,2151.1719 L767.8281,2151.5781 Q767.3594,2150.0313 766.6953,2149.3672 Q766.0313,2148.7031 764.9688,2148.7031 Q764.5781,2148.7031 763.8125,2150.2344 Q763.0469,2151.7656 763.0469,2154.0156 Q763.0469,2156.4844 763.7109,2157.875 Q764.375,2159.2656 764.9063,2159.2656 Q765.9688,2159.2656 766.7266,2158.5 Q767.4844,2157.7344 767.8281,2156.0781 L769.1563,2156.6719 Q768.8281,2158.0781 767.9297,2158.9688 Q767.0313,2159.8594 764.8281,2159.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="786.75" y="2160.9839">OdbcStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="623.5" x2="1033.5" y1="2170.5" y2="2170.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2178.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="642.5" y="2190.5439">m_dictionary : Dictionary</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2197.6201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="642.5" y="2209.6641">m_settings : SessionSettings</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2216.7402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="642.5" y="2228.7842">m_user : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2235.8604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="642.5" y="2247.9043">m_password : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2254.9805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="642.5" y="2267.0244">m_connectionString : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2274.1006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="642.5" y="2286.1445">m_useSettings : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2293.2207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="642.5" y="2305.2646">m_useDictionary : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="623.5" x2="1033.5" y1="2312.3408" y2="2312.3408"/><ellipse cx="633.5" cy="2323.3408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="642.5" y="2332.3848">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="633.5" cy="2342.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="642.5" y="2351.5049">destroy(MessageStore*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="630.5" y="2358.5811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="642.5" y="2370.625">create(const SessionID&amp;, const Dictionary&amp;) : MessageStore*</text></g><!--MD5=[e503399637fecfeec8454e7290188a4d]
class OdbcStore--><g id="elem_OdbcStore"><rect codeLine="367" fill="#F1F1F1" height="334.8018" id="OdbcStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="822.5" y="2604"/><ellipse cx="914.25" cy="2620" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M912.8281,2625.3594 Q910.9688,2625.3594 909.875,2623.9688 Q908.7813,2622.5781 908.7813,2619.5938 Q908.7813,2617.0625 909.9453,2615.4063 Q911.1094,2613.75 913.0938,2613.75 Q914.5625,2613.75 915.0313,2613.875 Q915.5,2614.0781 915.5,2614.0781 Q915.5,2614.0781 915.5,2614.0078 Q915.5,2613.9375 916.1094,2613.0156 L917.1563,2616.6719 L915.8281,2617.0781 Q915.3594,2615.5313 914.6953,2614.8672 Q914.0313,2614.2031 912.9688,2614.2031 Q912.5781,2614.2031 911.8125,2615.7344 Q911.0469,2617.2656 911.0469,2619.5156 Q911.0469,2621.9844 911.7109,2623.375 Q912.375,2624.7656 912.9063,2624.7656 Q913.9688,2624.7656 914.7266,2624 Q915.4844,2623.2344 915.8281,2621.5781 L917.1563,2622.1719 Q916.8281,2623.5781 915.9297,2624.4688 Q915.0313,2625.3594 912.8281,2625.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="934.75" y="2626.4839">OdbcStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="823.5" x2="1081.5" y1="2636" y2="2636"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="830.5" y="2644"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="842.5" y="2656.0439">m_cache : MemoryStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="830.5" y="2663.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="842.5" y="2675.1641">m_pConnection : OdbcConnection*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="830.5" y="2682.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="842.5" y="2694.2842">m_sessionID : SessionID</text><line style="stroke:#181818;stroke-width:0.5;" x1="823.5" x2="1081.5" y1="2701.3604" y2="2701.3604"/><ellipse cx="833.5" cy="2712.3604" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="842.5" y="2721.4043">set(int, const string&amp;) : bool</text><ellipse cx="833.5" cy="2731.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="842.5" y="2740.5244">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="833.5" cy="2750.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="842.5" y="2759.6445">getNextSenderMsgSeqNum() : int</text><ellipse cx="833.5" cy="2769.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="842.5" y="2778.7646">getNextTargetMsgSeqNum() : int</text><ellipse cx="833.5" cy="2788.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="842.5" y="2797.8848">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="833.5" cy="2807.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="842.5" y="2817.0049">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="833.5" cy="2827.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="842.5" y="2836.125">incrNextSenderMsgSeqNum() : void</text><ellipse cx="833.5" cy="2846.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="842.5" y="2855.2451">incrNextTargetMsgSeqNum() : void</text><ellipse cx="833.5" cy="2865.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="842.5" y="2874.3652">getCreateionTime() : UtcTimeStamp</text><ellipse cx="833.5" cy="2884.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="842.5" y="2893.4854">reset() : void</text><ellipse cx="833.5" cy="2903.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="842.5" y="2912.6055">refresh() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="830.5" y="2919.6816"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="842.5" y="2931.7256">populateCache() : void</text></g><path d="M6,2624 L6,2669.5088 A0,0 0 0 0 6,2669.5088 L222,2669.5088 A0,0 0 0 0 222,2669.5088 L222,2650.7544 L475.5,2958.0825 L222,2642.7544 L222,2634 L212,2624 L6,2624 A0,0 0 0 0 6,2624 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M212,2624 L212,2634 L222,2634 L212,2624 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="12" y="2643.8979">从文件中读出数据</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="12" y="2661.6523">比如：读出序列号，设置到内存中</text><path d="M6,2679.5088 L6,2742.772 A0,0 0 0 0 6,2742.772 L211,2742.772 A0,0 0 0 0 211,2742.772 L211,2715.1404 L475.5,2938.9624 L211,2707.1404 L211,2689.5088 L201,2679.5088 L6,2679.5088 A0,0 0 0 0 6,2679.5088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M201,2679.5088 L201,2689.5088 L211,2689.5088 L201,2679.5088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="184" x="12" y="2699.4067">1. 先读出文件中的数据写入内存</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="12" y="2717.1611">2. 将内存中的数据同步到文件</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="2734.9155">有什么意义？</text><path d="M6,2752.772 L6,2798.2808 A0,0 0 0 0 6,2798.2808 L196,2798.2808 A0,0 0 0 0 196,2798.2808 L196,2779.5264 L475.5,2720.6411 L196,2771.5264 L196,2762.772 L186,2752.772 L6,2752.772 A0,0 0 0 0 6,2752.772 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M186,2752.772 L186,2762.772 L196,2762.772 L186,2752.772 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="2772.6699">通信过程中，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="12" y="2790.4243">实时地将收到的消息写入文件</text><path d="M6,2808.2808 L6,2853.7896 A0,0 0 0 0 6,2853.7896 L222,2853.7896 A0,0 0 0 0 222,2853.7896 L222,2835.0352 L475.5,2996.3228 L222,2827.0352 L222,2818.2808 L212,2808.2808 L6,2808.2808 A0,0 0 0 0 6,2808.2808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M212,2808.2808 L212,2818.2808 L222,2818.2808 L212,2808.2808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="2828.1787">通信过程中，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="12" y="2845.9331">实时地将序列号的变更同步到文件</text><path d="M6,2863.7896 L6,2909.2983 A0,0 0 0 0 6,2909.2983 L261,2909.2983 A0,0 0 0 0 261,2909.2983 L261,2890.5439 L475.5,3015.4429 L261,2882.5439 L261,2873.7896 L251,2863.7896 L6,2863.7896 A0,0 0 0 0 6,2863.7896 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M251,2863.7896 L251,2873.7896 L261,2873.7896 L251,2863.7896 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="2883.6875">通信过程中，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="12" y="2901.4419">实时地将会话创建时间的变更同步到文件</text><path d="M2924,910.5 L2924,929.2544 L2426,656.9233 L2924,937.2544 L2924,956.0088 A0,0 0 0 0 2924,956.0088 L3156,956.0088 A0,0 0 0 0 3156,956.0088 L3156,920.5 L3146,910.5 L2924,910.5 A0,0 0 0 0 2924,910.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M3146,910.5 L3146,920.5 L3156,920.5 L3146,910.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="2930" y="930.3979">发送消息的接口</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="211" x="2930" y="948.1523">最终会调用 SocketConnection::send</text><path d="M2924,966.0088 L2924,975.886 L2513,771.644 L2924,983.886 L2924,993.7632 A0,0 0 0 0 2924,993.7632 L3173,993.7632 A0,0 0 0 0 3173,993.7632 L3173,976.0088 L3163,966.0088 L2924,966.0088 A0,0 0 0 0 2924,966.0088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M3163,966.0088 L3163,976.0088 L3173,976.0088 L3163,966.0088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="228" x="2930" y="985.9067">generate* 方法用于构造与发送管理消息</text><path d="M2924,1003.7632 L2924,1022.5176 L2338,1009.0854 L2924,1030.5176 L2924,1049.272 A0,0 0 0 0 2924,1049.272 L3114,1049.272 A0,0 0 0 0 3114,1049.272 L3114,1013.7632 L3104,1003.7632 L2924,1003.7632 A0,0 0 0 0 2924,1003.7632 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M3104,1003.7632 L3104,1013.7632 L3114,1013.7632 L3104,1003.7632 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="2930" y="1023.6611">用于在长时间没有数据发送时</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="2930" y="1041.4155">发送心跳包给对端</text><path d="M2924,1059.272 L2924,1078.0264 L2647,1047.3257 L2924,1086.0264 L2924,1104.7808 A0,0 0 0 0 2924,1104.7808 L3093,1104.7808 A0,0 0 0 0 3093,1104.7808 L3093,1069.272 L3083,1059.272 L2924,1059.272 A0,0 0 0 0 2924,1059.272 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M3083,1059.272 L3083,1069.272 L3093,1069.272 L3083,1059.272 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="2930" y="1079.1699">用于接收并解析消息</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="2930" y="1096.9243">回调 Application::to* 方法</text><path d="M2924,1114.7808 L2924,1124.658 L2548,1303.8872 L2924,1132.658 L2924,1142.5352 A0,0 0 0 0 2924,1142.5352 L3075,1142.5352 A0,0 0 0 0 3075,1142.5352 L3075,1124.7808 L3065,1114.7808 L2924,1114.7808 A0,0 0 0 0 2924,1114.7808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M3065,1114.7808 L3065,1124.7808 L3075,1124.7808 L3065,1114.7808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="2930" y="1134.6787">发送消息后递增序列号</text><!--MD5=[049c703a902eea40dcc335a121aada33]
reverse link SessionState to Session--><g id="link_SessionState_Session"><path codeLine="445" d="M2163.78,1031.5 C2189.28,1031.5 2216.32,1031.5 2243.83,1031.5 " fill="none" id="SessionState-backto-Session" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="2158.7,1031.5,2167.7,1035.5,2163.7,1031.5,2167.7,1027.5,2158.7,1031.5" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="2176.75" y="1025.3979">contains</text></g><!--MD5=[bba7de145f0463b3b009117c51dcfccc]
link FileStore to MemoryStore--><g id="link_FileStore_MemoryStore"><path codeLine="446" d="M731.66,2961.21 C755.06,2991.25 780.11,3021.22 805.5,3048 C854.84,3100.05 914.94,3151.56 968.14,3193.85 " fill="none" id="FileStore-to-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="972.28,3197.14,967.708,3188.4166,968.3604,3194.0358,962.7412,3194.6881,972.28,3197.14" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="850.5" y="3093.8979">contains</text></g><!--MD5=[8e1580056fbaaa4990ce01517a004311]
link MySQLStore to MemoryStore--><g id="link_MySQLStore_MemoryStore"><path codeLine="447" d="M1314.71,2939.14 C1279.7,2997.61 1240.32,3063.36 1205.08,3122.2 " fill="none" id="MySQLStore-to-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1202.34,3126.78,1210.4004,3121.1205,1204.9125,3122.4925,1203.5405,3117.0046,1202.34,3126.78" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="1231.5" y="3093.8979">contains</text></g><!--MD5=[5ea25877ad40c0fd10b91ec41c419e12]
link OdbcStore to MemoryStore--><g id="link_OdbcStore_MemoryStore"><path codeLine="448" d="M1000.48,2939.14 C1017.28,2997.49 1036.16,3063.09 1053.08,3121.84 " fill="none" id="OdbcStore-to-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1054.5,3126.78,1055.8468,3117.0237,1053.1132,3121.9762,1048.1607,3119.2426,1054.5,3126.78" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="1045.5" y="3093.8979">contains</text></g><!--MD5=[d0f001f2ffcfae6e946d9a7010e9a2a5]
link SessionState to MessageStore--><g id="link_SessionState_MessageStore"><path codeLine="449" d="M1931.45,1847.5 C1898.17,1920.72 1853.63,1987.87 1794.5,2043 C1648.67,2178.98 1527.32,2009.79 1349.5,2100 C1335.8,2106.95 1322.68,2115.68 1310.29,2125.45 " fill="none" id="SessionState-to-MessageStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="1306.12,2128.81,1315.6376,2126.2773,1310.0132,2125.6726,1310.6178,2120.0482,1306.12,2128.81" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="1777.5" y="2066.8979">contains</text></g><!--MD5=[b3e17db0a5ae13c5564e5baefd96b568]
link MessageStoreFactory to MessageStore--><g id="link_MessageStoreFactory_MessageStore"><path codeLine="451" d="M958.53,1074.51 C976,1216.24 1038.38,1689.2 1136.5,2070 C1141.02,2087.54 1146.4,2105.8 1152.08,2123.73 " fill="none" id="MessageStoreFactory-to-MessageStore" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1153.7,2128.78,1154.755,2118.9878,1152.1704,2124.0197,1147.1385,2121.4351,1153.7,2128.78" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[1c82547e492b0e74fd37a0d43e5c20af]
link FileStoreFactory to FileStore--><g id="link_FileStoreFactory_FileStore"><path codeLine="452" d="M459.76,2320.19 C473.47,2363.74 492.96,2425.68 513.12,2489.73 " fill="none" id="FileStoreFactory-to-FileStore" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="514.7,2494.74,515.7901,2484.9517,513.1875,2489.9742,508.1649,2487.3716,514.7,2494.74" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[8f2429fd9f98bcfeb8e622f74bb00d08]
link MySQLStoreFactory to MySQLStore--><g id="link_MySQLStoreFactory_MySQLStore"><path codeLine="453" d="M1523.91,2416.29 C1506.05,2474.12 1485.74,2539.88 1467.51,2598.9 " fill="none" id="MySQLStoreFactory-to-MySQLStore" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="1465.97,2603.86,1472.4446,2596.4384,1467.4434,2599.082,1464.7998,2594.0809,1465.97,2603.86" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[c4f743ac3d69d326012122277a6914ec]
link OdbcStoreFactory to OdbcStore--><g id="link_OdbcStoreFactory_OdbcStore"><path codeLine="454" d="M857.26,2377.63 C873.15,2443.2 893.19,2525.84 910.78,2598.39 " fill="none" id="OdbcStoreFactory-to-OdbcStore" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="912.04,2603.59,913.8184,2593.903,910.8677,2598.7294,906.0414,2595.7787,912.04,2603.59" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6e321f66f42d5f78e40fb13dbb63ca68]
reverse link MessageStoreFactory to FileStoreFactory--><g id="link_MessageStoreFactory_FileStoreFactory"><path codeLine="455" d="M928.02,1093.31 C840.66,1301.83 553.8,1986.55 466.16,2195.75 " fill="none" id="MessageStoreFactory-backto-FileStoreFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="921.66,1090.39,935.84,1074.65,934.57,1095.8,921.66,1090.39" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="527.5" y="2066.8979">implements</text></g><!--MD5=[c6c48c64ffc953171533c9258a543824]
reverse link MessageStoreFactory to MySQLStoreFactory--><g id="link_MessageStoreFactory_MySQLStoreFactory"><path codeLine="456" d="M947.8,1094.84 C935.07,1274.8 924.81,1799.49 1204.5,2070 C1251.8,2115.75 1289.11,2073.84 1349.5,2100 C1355.15,2102.45 1360.8,2105.05 1366.43,2107.79 " fill="none" id="MessageStoreFactory-backto-MySQLStoreFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="940.84,1094.05,949.34,1074.64,954.8,1095.12,940.84,1094.05" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1205.5" y="2066.8979">implements</text></g><!--MD5=[3eb00bb3dc7b315fe03b3d154a7a12d0]
reverse link MessageStoreFactory to OdbcStoreFactory--><g id="link_MessageStoreFactory_OdbcStoreFactory"><path codeLine="457" d="M947.15,1094.7 C927.39,1288.32 866.72,1882.61 840.63,2138.16 " fill="none" id="MessageStoreFactory-backto-OdbcStoreFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="940.2,1093.84,949.2,1074.65,954.13,1095.26,940.2,1093.84" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="849.5" y="2066.8979">implements</text></g><!--MD5=[5666007e65dddd747cae9ef58d816d37]
reverse link MessageStore to FileStore--><g id="link_MessageStore_FileStore"><path codeLine="458" d="M1075.46,2399.88 C1067.97,2405.67 1060.3,2411.09 1052.5,2416 C954.99,2477.44 899.2,2427.89 805.5,2495 C778.77,2514.15 754.07,2537.86 731.78,2563.28 " fill="none" id="MessageStore-backto-FileStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1071.14,2394.37,1091.05,2387.13,1080,2405.21,1071.14,2394.37" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="979.5" y="2461.8979">implements</text></g><!--MD5=[acb95e309764459ab4d1de3f474e5d8b]
reverse link MessageStore to MySQLStore--><g id="link_MessageStore_MySQLStore"><path codeLine="459" d="M1261.96,2405.89 C1287.79,2467.65 1317.99,2539.82 1344.66,2603.57 " fill="none" id="MessageStore-backto-MySQLStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1255.35,2408.24,1254.09,2387.08,1268.26,2402.83,1255.35,2408.24" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1282.5" y="2461.8979">implements</text></g><!--MD5=[5cdbaf528d8fa8b6a4f8e392145ad007]
reverse link MessageStore to OdbcStore--><g id="link_MessageStore_OdbcStore"><path codeLine="460" d="M1097.82,2404.48 C1089.51,2418.27 1081.6,2432.24 1074.5,2446 C1048.84,2495.74 1025.72,2552.17 1006.68,2603.86 " fill="none" id="MessageStore-backto-OdbcStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1092.06,2400.48,1108.52,2387.14,1103.97,2407.84,1092.06,2400.48" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1075.5" y="2461.8979">implements</text></g><!--MD5=[234a8aff4120347f47bda490cbeedb04]
reverse link MessageStore to MemoryStore--><g id="link_MessageStore_MemoryStore"><path codeLine="461" d="M1180.72,2407.11 C1177.1,2436.22 1173.52,2466.55 1170.5,2495 C1147.36,2713.08 1126.94,2965.33 1114.66,3126.99 " fill="none" id="MessageStore-backto-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="1173.78,2406.16,1183.22,2387.19,1187.67,2407.9,1173.78,2406.16" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1171.5" y="2777.8979">implements</text></g><!--MD5=[b775b9b953cd9067fd77b7c44f125449]
@startuml quickfix_session_fixsession_classmap
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 以下是类实例的定义
package "会话逻辑层" #DDDDDD
{
' 维护状态并实现 FIX 会话的逻辑。
class Session
{
    ' 成员变量
    - m_application : Application&
    - m_sessionID : SessionID
    - m_state : SessionState
    - m_pResponder : Responder*
    ..
    - m_dataDictionaryProvider : DataDictionaryProvider
    - m_messageStoreFactory : MessageStoreFactory&
    - m_pLogFactory : LogFactory*
    - m_mutex : Mutex
    ..
    {static}- s_sessions : map<SessionID, Session*>
    {static}- s_sessionIDs : set<SessionID>
    {static}- s_registered : map<SessionID, Session*>
    {static}- s_mutex : Mutex
    ..
    ' 与配置文件中的配置项相对应的成员变量
    - m_sessionTime : TimeRange
    - m_logonTime : TimeRange
    - m_senderDefaultApplVerID : string
    - m_targetDefaultApplVerID : string
    - m_sendRedundantResendRequests : bool
    - m_checkCompId : bool
    - m_checkLatency : bool
    - m_maxLatency : int
    - m_resetOnLogon : bool
    - m_resetOnLogout : bool
    - m_resetOnDisconnect : bool
    - m_refreshOnLogon : bool
    - m_timestampPrecision : int
    - m_persistMessages : bool
    - m_validateLengthAndCheckSum : bool
    - -
    ' 成员函数
    - send(Message&) : bool
    - send(const string&) : bool
    - sendRaw(Message&, int = 0) : bool
    - resend(Message&) : bool
    - shouleSendReset() : bool
    - disconnect() : void
    - generateLogon() : void
    - generateLogon(const Message&) : void
    - generateResendRequest(const BeginString&, const MsgSeqNum&) : void
    - generateSequenceReset(int, int) : void
    - generateHeartbeat() : void
    - generateHeartbeat(const Message&) : void
    - generateTestRequest(const std::string&) : void
    - generateReject(const Message&, int, int = 0) : void
    - generateReject(const Message&, const std::string&) : void
    - generateBusinessReject(const Message&, int, int = 0) : void
    - generateLogout( const std::string&= "") : void
    - populateRejectReason(Message&, int, const std::string&) : void
    - populateRejectReason(Message&, const std::string&) : void
    ..
    - next() : void
    - next(const UtcTimeStamp&) : void
    - next(const string&, const UtcTimeStamp&, bool = false) : void
    - next(const Message&, const UtcTimeStamp&, bool = false) : void
    - verfy(const Message&, bool = true, bool = true) : bool
    - fromCallback(const MsgType&, const Message&, const SessionID&) : void
    - nextLogon(const Message&, const UtcTimeStamp&) : void
    - nextLogout(const Message&, const UtcTimeStamp&) : void
    - nextHeartbeat(const Message&, const UtcTimeStamp&) : void
    - nextTestRequest(const Message&, const UtcTimeStamp&) : void
    - nextReject(const Message&, const UtcTimeStamp&) : void
    - nextSequenceReset(const Message&, const UtcTimeStamp&) : void
    - nextResendRequest(const Message&, const UtcTimeStamp&) : void
    - nextQueued(int, const UtcTimeStamp&) : bool
    - nextQueued(const UtcTimeStamp&) : void
    ..
    - persist(const Message&, const string&) : void
    - setNextSenderMsgSeqNum(int) : void
    - SetNextTargetMsgSeqNum(int) : void
    - getExpectedSenderNum() : int
    - getExpectedTargetNum() : int
    ..
    - doBadTime(const Message&) : void
    - doBadCompID(const Message&) : void
    - doPossDup(const Message&) : bool
    - doTargetTooLow(const Message&) : bool
    - doTargetTooHight(const Message&) : void
    - insertSendingTime(Header&) : void
    - insertOrigSendingTime(Header&, const UtcTimeStamp& = UtcTimeStamp()) : void
    - fill(Header&) : void
    ..
    - reset() : void
    {static}- sendToTarget(Message&, const string& = "") : bool
    {static}- sendToTarget(Message&, cosnt SessionID&) : bool
    {static}- sendToTarget(Message&, const SenderCompID&, const TargetCompID&, const string& = "") : bool
    {static}- sendToTarget(Message&, const string&, const string&, const string& = "") : bool
    {static}- getSessions() : set<SessoinID>
    {static}- lookupSession(const SessionID&) : Session*
    {static}- lookupSession(const string&, bool = false) : Session*
    {static}- isSessionRegistered(const SessionID&) : bool
    {static}- registerSession(const SessionID&) : Session&
    {static}- unregisterSession(const SessionID&)
    {static}- numSessions() : size_t
    {static}- addSession(Sessioni&) : bool
    {static}- removeSession(Session&) : void
    ..
    ' 设置或获取状态相关的函数
    - logon() : void
    - logout(const string& = "") : void
    - isEnable() : bool
    - sentLogon() : bool
    - sentLogout() : bool
    - receivedLogon() : bool
    - isLoggedOn() : bool
    - refresh() : void
    ..
    ' 获取/设置成员变量的函数
    {method}- getter & setter
}

' 维护Session类的所有状态
class SessionState
{
    ' 成员变量
    - m_enabled : bool
    - m_receivedLogon : bool
    - m_sentLogout : bool
    - m_sentLogon : bool
    - m_sentReset : bool
    - m_receivedReset : bool
    - m_initiate : bool
    - m_logonTimeout : int
    - m_logoutTimeout : int
    - m_testRequest : int
    - m_resendRange : ResendRange
    - m_heartBtInt : HeartBtInt
    - m_lastSentTime : UtcTimeStamp
    - m_lastReceivedTime : UtcTimeStamp
    - m_logoutReason : string
    - m_queue : map<int, Message>
    - m_pStore : MessageStore*
    - m_pLog : Log*
    - m_nullLog : NullLog
    - m_mutex : Mutex
    ' 成员函数
    - -
    ' 缓存发送过的消息
    - getNextSenderMsgSeqNum() : int
    - getNextTargetMsgSeqNum() : int
    - setNextSenderMsgSeqNum(int) : void
    - setNextTargetMsgSeqNum(int) : void
    - incrNextSenderMsgSeqNum() : void
    - incrNextTargetMsgSeqNum() : void
    - queue(int, const Message&) : void
    - retrieve(int, Message&)
    - clearQueue() : void
    ..
    - onIncoming() : void
    - onOutgoing() : void
    - onEvent() : void
    - reset() : void
    - refresh() : void
    - clear() : void
    - backup() : void
    ..
    ' 以下是根据 Fix 会话中的各种规定进行状态的设置
    - receivedLogon() : bool
    - receivedLogon(bool) : void
    - sentLogout() : bool
    - sentLogout(bool) : void
    - sentLogon() : bool
    - sentLogon(bool) : void
    - receivedReset() : bool
    - receivedReset(bool) : void
    - sentReset() : bool
    - sentReset(bool) : void
    - initiate() : bool
    - initiate(bool) : void
    - logonTimeout() : int
    - logonTimeout(int) : void
    - logoutTimeout() : int
    - logoutTimeout() : void
    - testRequest() : int
    - testRequest(int) : void
    - resendRequested() : bool
    - resendRange() : pair<int, int>
    - resendRage(int, int) : void
    - store() : MessageStore*
    - store(MessageStore) : void
    - log() : Log*
    - log(Log*) : void
    - heartBtInt() : HeartBtInt&
    - heartBtInt() : const HeartBtInt&
    - heartBtInt(cosnt HeartBtInt) : void
    - lastSendTime(const UtcTimeStamp&) : void
    - lastSendTime() : UtcTimeStamp
    - lastReceivedTime(const UtcTimeStamp&) : void
    - lastReceivedTime() : UtcTimeStamp
    - lastReceivedTime() : const UtcTimeStamp
    - shouleSendLogon() : bool
    - alreadySendLogon() : bool
    - logonTimedOut() : bool
    - logoutTimedOut() : bool
    - withinHeartBeat() : bool
    - timedOut() : bool
    - needHeartbeat() : bool
    - needTestRequest() : bool
    - logoutReason() : string
    - logoutReson (const string&) : void
    - set(int, string&) : bool
    - get(int, int, vector<string>&) : void
    - getCreateionTime() : UtcTimeStamp
}
}
' end package

package "会话消息与序列号管理" #DDDDDD
{
interface MessageStore
{
    ' 成员函数
    {abstract}+ set(int, const string&) : bool
    {abstract}+ get(int, int, vector<string>&) : void
    {abstract}+ getNextSenderMsgSeqNum() : int
    {abstract}+ getNextTargetMsgSeqNum() : int
    {abstract}+ setNextSenderMsgSeqNum(int) : void
    {abstract}+ setNextTargetMsgSeqNum(int) : void
    {abstract}+ incrNextSenderMsgSeqNum() : void
    {abstract}+ incrNextTargetMsgSeqNum() : void
    {abstract}+ getCreateionTime() : UtcTimeStamp
    {abstract}+ reset() : void
    {abstract}+ refresh() : void
}

interface MessageStoreFactory
{
    ' 成员方法
    {abstract}+ create(const SessionID&) : MessageStore*
    {abstract}+ destroy(MessageStore*) : void
}

class FileStoreFactory
{
    ' 成员变量
    - m_path : string
    - m_settings : SessionSettings
    ' 成员函数
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
}

' 基于文件的存储实现
class FileStore
{
    ' 成员变量
    - m_cache : MemoryStore
    - m_offsets : map<int, pair<int, int>>
    - m_msgFileName : string
    - m_headerFileName : string
    - m_seqNumsFileNmae : string
    - m_msgFile : FILE*
    - m_headerFile : FILE*
    - m_seqNumsFile : FILE*
    - m_sessionFile : FILE*
    - -
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    ..
    - open(bool) : void
    - populateCache() : void
    - readFromFile(int, int, string&) : bool
    - setSeqNum() : void
    - setSession() : void
    - get(int, string&) : bool
}

class MemoryStore
{
    ' 成员变量
    - m_messages : map<int, string>
    - m_nextSenderMsgSeqNum : int
    - m_nextTargetMsgSeqNum : int
    - m_creationTime : UtcTimeStamp
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

' 基于mysql的存储实现
class MySQLStoreFactory
{
    ' 成员变量
    - m_connectionPoolPtr : MySQLConnectionPoolPtr
    - m_settings : SessionSettings
    - m_dictionary : Dictionary
    - m_database : string
    - m_password : string
    - m_user : string
    - m_password : string
    - m_host : string
    - m_port : short
    - m_useSettings : bool
    - m_useDictionary : bool
    ' 成员函数
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class MySQLStore
{
    ' 成员变量
    - m_cache : MemoryStore
    - m_pConnection : MySQLConnection*
    - m_pConnectionPool : MySQLConnectionPool*
    - m_sessionID : SessionID
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

class OdbcStoreFactory
{
    ' 成员变量
    - m_dictionary : Dictionary
    - m_settings : SessionSettings
    - m_user : string
    - m_password : string
    - m_connectionString : string
    - m_useSettings : bool
    - m_useDictionary : bool
    ' 成员函数
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class OdbcStore
{
    ' 成员变量
    - m_cache : MemoryStore
    - m_pConnection : OdbcConnection*
    - m_sessionID : SessionID
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    - populateCache() : void
}
}
' end package

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 以下是注释

note left of FileStore::populateCache
从文件中读出数据
比如：读出序列号，设置到内存中
end note

note left of FileStore::open
1. 先读出文件中的数据写入内存
2. 将内存中的数据同步到文件
有什么意义？
end note

note left of FileStore::"set(int, const string&)"
通信过程中，
实时地将收到的消息写入文件
end note

note left of FileStore::setSeqNum
通信过程中，
实时地将序列号的变更同步到文件
end note

note left of FileStore::setSession
通信过程中，
实时地将会话创建时间的变更同步到文件
end note

note left of Session::"send(const string&)"
发送消息的接口
最终会调用 SocketConnection::send
end note

note left of Session::"generateLogon(const Message&)"
generate* 方法用于构造与发送管理消息
end note

note left of Session::"next()"
用于在长时间没有数据发送时
发送心跳包给对端
end note

note left of Session::"next(const string&, const UtcTimeStamp&, bool = false)"
用于接收并解析消息
回调 Application::to* 方法
end note

note left of Session::"persist(const Message&, const string&)"
发送消息后递增序列号
end note

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 以下是类关系的定义

Session -left-> SessionState : contains
FileStore - -> MemoryStore : contains
MySQLStore - -> MemoryStore : contains
OdbcStore - -> MemoryStore : contains
SessionState - -> MessageStore : contains

MessageStoreFactory ..> MessageStore 
FileStoreFactory ..> FileStore
MySQLStoreFactory ..> MySQLStore
OdbcStoreFactory ..> OdbcStore
MessageStoreFactory <|- - FileStoreFactory : implements
MessageStoreFactory <|- - MySQLStoreFactory : implements
MessageStoreFactory <|- - OdbcStoreFactory : implements
MessageStore <|- - FileStore : implements
MessageStore <|- - MySQLStore : implements
MessageStore <|- - OdbcStore : implements
MessageStore <|- - MemoryStore : implements
@enduml

@startuml quickfix_session_fixsession_classmap
package "会话逻辑层" #DDDDDD
{
class Session
{
    - m_application : Application&
    - m_sessionID : SessionID
    - m_state : SessionState
    - m_pResponder : Responder*
    ..
    - m_dataDictionaryProvider : DataDictionaryProvider
    - m_messageStoreFactory : MessageStoreFactory&
    - m_pLogFactory : LogFactory*
    - m_mutex : Mutex
    ..
    {static}- s_sessions : map<SessionID, Session*>
    {static}- s_sessionIDs : set<SessionID>
    {static}- s_registered : map<SessionID, Session*>
    {static}- s_mutex : Mutex
    ..
    - m_sessionTime : TimeRange
    - m_logonTime : TimeRange
    - m_senderDefaultApplVerID : string
    - m_targetDefaultApplVerID : string
    - m_sendRedundantResendRequests : bool
    - m_checkCompId : bool
    - m_checkLatency : bool
    - m_maxLatency : int
    - m_resetOnLogon : bool
    - m_resetOnLogout : bool
    - m_resetOnDisconnect : bool
    - m_refreshOnLogon : bool
    - m_timestampPrecision : int
    - m_persistMessages : bool
    - m_validateLengthAndCheckSum : bool
    - -
    - send(Message&) : bool
    - send(const string&) : bool
    - sendRaw(Message&, int = 0) : bool
    - resend(Message&) : bool
    - shouleSendReset() : bool
    - disconnect() : void
    - generateLogon() : void
    - generateLogon(const Message&) : void
    - generateResendRequest(const BeginString&, const MsgSeqNum&) : void
    - generateSequenceReset(int, int) : void
    - generateHeartbeat() : void
    - generateHeartbeat(const Message&) : void
    - generateTestRequest(const std::string&) : void
    - generateReject(const Message&, int, int = 0) : void
    - generateReject(const Message&, const std::string&) : void
    - generateBusinessReject(const Message&, int, int = 0) : void
    - generateLogout( const std::string&= "") : void
    - populateRejectReason(Message&, int, const std::string&) : void
    - populateRejectReason(Message&, const std::string&) : void
    ..
    - next() : void
    - next(const UtcTimeStamp&) : void
    - next(const string&, const UtcTimeStamp&, bool = false) : void
    - next(const Message&, const UtcTimeStamp&, bool = false) : void
    - verfy(const Message&, bool = true, bool = true) : bool
    - fromCallback(const MsgType&, const Message&, const SessionID&) : void
    - nextLogon(const Message&, const UtcTimeStamp&) : void
    - nextLogout(const Message&, const UtcTimeStamp&) : void
    - nextHeartbeat(const Message&, const UtcTimeStamp&) : void
    - nextTestRequest(const Message&, const UtcTimeStamp&) : void
    - nextReject(const Message&, const UtcTimeStamp&) : void
    - nextSequenceReset(const Message&, const UtcTimeStamp&) : void
    - nextResendRequest(const Message&, const UtcTimeStamp&) : void
    - nextQueued(int, const UtcTimeStamp&) : bool
    - nextQueued(const UtcTimeStamp&) : void
    ..
    - persist(const Message&, const string&) : void
    - setNextSenderMsgSeqNum(int) : void
    - SetNextTargetMsgSeqNum(int) : void
    - getExpectedSenderNum() : int
    - getExpectedTargetNum() : int
    ..
    - doBadTime(const Message&) : void
    - doBadCompID(const Message&) : void
    - doPossDup(const Message&) : bool
    - doTargetTooLow(const Message&) : bool
    - doTargetTooHight(const Message&) : void
    - insertSendingTime(Header&) : void
    - insertOrigSendingTime(Header&, const UtcTimeStamp& = UtcTimeStamp()) : void
    - fill(Header&) : void
    ..
    - reset() : void
    {static}- sendToTarget(Message&, const string& = "") : bool
    {static}- sendToTarget(Message&, cosnt SessionID&) : bool
    {static}- sendToTarget(Message&, const SenderCompID&, const TargetCompID&, const string& = "") : bool
    {static}- sendToTarget(Message&, const string&, const string&, const string& = "") : bool
    {static}- getSessions() : set<SessoinID>
    {static}- lookupSession(const SessionID&) : Session*
    {static}- lookupSession(const string&, bool = false) : Session*
    {static}- isSessionRegistered(const SessionID&) : bool
    {static}- registerSession(const SessionID&) : Session&
    {static}- unregisterSession(const SessionID&)
    {static}- numSessions() : size_t
    {static}- addSession(Sessioni&) : bool
    {static}- removeSession(Session&) : void
    ..
    - logon() : void
    - logout(const string& = "") : void
    - isEnable() : bool
    - sentLogon() : bool
    - sentLogout() : bool
    - receivedLogon() : bool
    - isLoggedOn() : bool
    - refresh() : void
    ..
    {method}- getter & setter
}

class SessionState
{
    - m_enabled : bool
    - m_receivedLogon : bool
    - m_sentLogout : bool
    - m_sentLogon : bool
    - m_sentReset : bool
    - m_receivedReset : bool
    - m_initiate : bool
    - m_logonTimeout : int
    - m_logoutTimeout : int
    - m_testRequest : int
    - m_resendRange : ResendRange
    - m_heartBtInt : HeartBtInt
    - m_lastSentTime : UtcTimeStamp
    - m_lastReceivedTime : UtcTimeStamp
    - m_logoutReason : string
    - m_queue : map<int, Message>
    - m_pStore : MessageStore*
    - m_pLog : Log*
    - m_nullLog : NullLog
    - m_mutex : Mutex
    - -
    - getNextSenderMsgSeqNum() : int
    - getNextTargetMsgSeqNum() : int
    - setNextSenderMsgSeqNum(int) : void
    - setNextTargetMsgSeqNum(int) : void
    - incrNextSenderMsgSeqNum() : void
    - incrNextTargetMsgSeqNum() : void
    - queue(int, const Message&) : void
    - retrieve(int, Message&)
    - clearQueue() : void
    ..
    - onIncoming() : void
    - onOutgoing() : void
    - onEvent() : void
    - reset() : void
    - refresh() : void
    - clear() : void
    - backup() : void
    ..
    - receivedLogon() : bool
    - receivedLogon(bool) : void
    - sentLogout() : bool
    - sentLogout(bool) : void
    - sentLogon() : bool
    - sentLogon(bool) : void
    - receivedReset() : bool
    - receivedReset(bool) : void
    - sentReset() : bool
    - sentReset(bool) : void
    - initiate() : bool
    - initiate(bool) : void
    - logonTimeout() : int
    - logonTimeout(int) : void
    - logoutTimeout() : int
    - logoutTimeout() : void
    - testRequest() : int
    - testRequest(int) : void
    - resendRequested() : bool
    - resendRange() : pair<int, int>
    - resendRage(int, int) : void
    - store() : MessageStore*
    - store(MessageStore) : void
    - log() : Log*
    - log(Log*) : void
    - heartBtInt() : HeartBtInt&
    - heartBtInt() : const HeartBtInt&
    - heartBtInt(cosnt HeartBtInt) : void
    - lastSendTime(const UtcTimeStamp&) : void
    - lastSendTime() : UtcTimeStamp
    - lastReceivedTime(const UtcTimeStamp&) : void
    - lastReceivedTime() : UtcTimeStamp
    - lastReceivedTime() : const UtcTimeStamp
    - shouleSendLogon() : bool
    - alreadySendLogon() : bool
    - logonTimedOut() : bool
    - logoutTimedOut() : bool
    - withinHeartBeat() : bool
    - timedOut() : bool
    - needHeartbeat() : bool
    - needTestRequest() : bool
    - logoutReason() : string
    - logoutReson (const string&) : void
    - set(int, string&) : bool
    - get(int, int, vector<string>&) : void
    - getCreateionTime() : UtcTimeStamp
}
}

package "会话消息与序列号管理" #DDDDDD
{
interface MessageStore
{
    {abstract}+ set(int, const string&) : bool
    {abstract}+ get(int, int, vector<string>&) : void
    {abstract}+ getNextSenderMsgSeqNum() : int
    {abstract}+ getNextTargetMsgSeqNum() : int
    {abstract}+ setNextSenderMsgSeqNum(int) : void
    {abstract}+ setNextTargetMsgSeqNum(int) : void
    {abstract}+ incrNextSenderMsgSeqNum() : void
    {abstract}+ incrNextTargetMsgSeqNum() : void
    {abstract}+ getCreateionTime() : UtcTimeStamp
    {abstract}+ reset() : void
    {abstract}+ refresh() : void
}

interface MessageStoreFactory
{
    {abstract}+ create(const SessionID&) : MessageStore*
    {abstract}+ destroy(MessageStore*) : void
}

class FileStoreFactory
{
    - m_path : string
    - m_settings : SessionSettings
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
}

class FileStore
{
    - m_cache : MemoryStore
    - m_offsets : map<int, pair<int, int>>
    - m_msgFileName : string
    - m_headerFileName : string
    - m_seqNumsFileNmae : string
    - m_msgFile : FILE*
    - m_headerFile : FILE*
    - m_seqNumsFile : FILE*
    - m_sessionFile : FILE*
    - -
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    ..
    - open(bool) : void
    - populateCache() : void
    - readFromFile(int, int, string&) : bool
    - setSeqNum() : void
    - setSession() : void
    - get(int, string&) : bool
}

class MemoryStore
{
    - m_messages : map<int, string>
    - m_nextSenderMsgSeqNum : int
    - m_nextTargetMsgSeqNum : int
    - m_creationTime : UtcTimeStamp
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

class MySQLStoreFactory
{
    - m_connectionPoolPtr : MySQLConnectionPoolPtr
    - m_settings : SessionSettings
    - m_dictionary : Dictionary
    - m_database : string
    - m_password : string
    - m_user : string
    - m_password : string
    - m_host : string
    - m_port : short
    - m_useSettings : bool
    - m_useDictionary : bool
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class MySQLStore
{
    - m_cache : MemoryStore
    - m_pConnection : MySQLConnection*
    - m_pConnectionPool : MySQLConnectionPool*
    - m_sessionID : SessionID
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

class OdbcStoreFactory
{
    - m_dictionary : Dictionary
    - m_settings : SessionSettings
    - m_user : string
    - m_password : string
    - m_connectionString : string
    - m_useSettings : bool
    - m_useDictionary : bool
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class OdbcStore
{
    - m_cache : MemoryStore
    - m_pConnection : OdbcConnection*
    - m_sessionID : SessionID
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    - populateCache() : void
}
}


note left of FileStore::populateCache
从文件中读出数据
比如：读出序列号，设置到内存中
end note

note left of FileStore::open
1. 先读出文件中的数据写入内存
2. 将内存中的数据同步到文件
有什么意义？
end note

note left of FileStore::"set(int, const string&)"
通信过程中，
实时地将收到的消息写入文件
end note

note left of FileStore::setSeqNum
通信过程中，
实时地将序列号的变更同步到文件
end note

note left of FileStore::setSession
通信过程中，
实时地将会话创建时间的变更同步到文件
end note

note left of Session::"send(const string&)"
发送消息的接口
最终会调用 SocketConnection::send
end note

note left of Session::"generateLogon(const Message&)"
generate* 方法用于构造与发送管理消息
end note

note left of Session::"next()"
用于在长时间没有数据发送时
发送心跳包给对端
end note

note left of Session::"next(const string&, const UtcTimeStamp&, bool = false)"
用于接收并解析消息
回调 Application::to* 方法
end note

note left of Session::"persist(const Message&, const string&)"
发送消息后递增序列号
end note


Session -left-> SessionState : contains
FileStore - -> MemoryStore : contains
MySQLStore - -> MemoryStore : contains
OdbcStore - -> MemoryStore : contains
SessionState - -> MessageStore : contains

MessageStoreFactory ..> MessageStore 
FileStoreFactory ..> FileStore
MySQLStoreFactory ..> MySQLStore
OdbcStoreFactory ..> OdbcStore
MessageStoreFactory <|- - FileStoreFactory : implements
MessageStoreFactory <|- - MySQLStoreFactory : implements
MessageStoreFactory <|- - OdbcStoreFactory : implements
MessageStore <|- - FileStore : implements
MessageStore <|- - MySQLStore : implements
MessageStore <|- - OdbcStore : implements
MessageStore <|- - MemoryStore : implements
@enduml

PlantUML version 1.2022.6(Wed Jun 22 01:34:49 CST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) Client VM
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>