<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="5220px" preserveAspectRatio="none" style="width:1804px;height:5220px;background:#FFFFFF;" version="1.1" viewBox="0 0 1804 5220" width="1804px" zoomAndPan="magnify"><defs/><g><!--MD5=[8c41d4c1731e235c323addd6b0640e8b]
cluster 会话逻辑层--><g id="cluster_会话逻辑层"><path d="M185,6 L261,6 A3.75,3.75 0 0 1 263.5,8.5 L270.5,31.1201 L858,31.1201 A2.5,2.5 0 0 1 860.5,33.6201 L860.5,2032.5 A2.5,2.5 0 0 1 858,2035 L185,2035 A2.5,2.5 0 0 1 182.5,2032.5 L182.5,8.5 A2.5,2.5 0 0 1 185,6 " fill="#DDDDDD" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="182.5" x2="270.5" y1="31.1201" y2="31.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="75" x="186.5" y="24.0439">会话逻辑层</text></g><!--MD5=[d4007c70d117d29afda90c59e300f7b5]
cluster 会话状态与序列号管理--><g id="cluster_会话状态与序列号管理"><path d="M283,2086 L434,2086 A3.75,3.75 0 0 1 436.5,2088.5 L443.5,2111.1201 L1795,2111.1201 A2.5,2.5 0 0 1 1797.5,2113.6201 L1797.5,5210.5 A2.5,2.5 0 0 1 1795,5213 L283,5213 A2.5,2.5 0 0 1 280.5,5210.5 L280.5,2088.5 A2.5,2.5 0 0 1 283,2086 " fill="#DDDDDD" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="280.5" x2="443.5" y1="2111.1201" y2="2111.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="150" x="284.5" y="2104.0439">会话状态与序列号管理</text></g><!--MD5=[2ca1536628238a7dc78c5d90808014f9]
class Session--><g id="elem_Session"><rect codeLine="6" fill="#F1F1F1" height="1974.6514" id="Session" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="645" x="199" y="44"/><ellipse cx="492.25" cy="60" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M490.8281,65.3594 Q488.9688,65.3594 487.875,63.9688 Q486.7813,62.5781 486.7813,59.5938 Q486.7813,57.0625 487.9453,55.4063 Q489.1094,53.75 491.0938,53.75 Q492.5625,53.75 493.0313,53.875 Q493.5,54.0781 493.5,54.0781 Q493.5,54.0781 493.5,54.0078 Q493.5,53.9375 494.1094,53.0156 L495.1563,56.6719 L493.8281,57.0781 Q493.3594,55.5313 492.6953,54.8672 Q492.0313,54.2031 490.9688,54.2031 Q490.5781,54.2031 489.8125,55.7344 Q489.0469,57.2656 489.0469,59.5156 Q489.0469,61.9844 489.7109,63.375 Q490.375,64.7656 490.9063,64.7656 Q491.9688,64.7656 492.7266,64 Q493.4844,63.2344 493.8281,61.5781 L495.1563,62.1719 Q494.8281,63.5781 493.9297,64.4688 Q493.0313,65.3594 490.8281,65.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="50" x="512.75" y="66.4839">Session</text><line style="stroke:#181818;stroke-width:0.5;" x1="200" x2="843" y1="76" y2="76"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="84"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="177" x="219" y="96.0439">m_application : Application&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="103.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="219" y="115.1641">m_sessionID : SessionID</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="122.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="219" y="134.2842">m_state : SessionState</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="141.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="184" x="219" y="153.4043">m_pResponder : Responder*</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="160.4805" y2="160.4805"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="168.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="321" x="219" y="180.5244">m_dataDictionaryProvider : DataDictionaryProvider</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="187.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="318" x="219" y="199.6445">m_messageStoreFactory : MessageStoreFactory&amp;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="206.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="219" y="218.7646">m_pLogFactory : LogFactory*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="225.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="219" y="237.8848">m_mutex : Mutex</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="244.9609" y2="244.9609"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="252.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="251" x="219" y="265.0049">s_sessions : map&lt;SessionID, Session*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="272.0811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="219" y="284.125">s_sessionIDs : set&lt;SessionID&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="291.2012"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="260" x="219" y="303.2451">s_registered : map&lt;SessionID, Session*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="310.3213"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="101" x="219" y="322.3652">s_mutex : Mutex</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="329.4414" y2="329.4414"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="337.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="219" y="349.4854">m_sessionTime : TimeRange</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="356.5615"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="219" y="368.6055">m_logonTime : TimeRange</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="375.6816"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="218" x="219" y="387.7256">m_senderDefaultApplVerID : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="394.8018"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="219" y="406.8457">m_targetDefaultApplVerID : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="413.9219"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="219" y="425.9658">m_sendRedundantResendRequests : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="433.042"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="219" y="445.0859">m_checkCompId : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="452.1621"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="219" y="464.2061">m_checkLatency : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="471.2822"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="219" y="483.3262">m_maxLatency : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="490.4023"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="219" y="502.4463">m_resetOnLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="509.5225"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="219" y="521.5664">m_resetOnLogout : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="528.6426"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="179" x="219" y="540.6865">m_resetOnDisconnect : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="547.7627"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="219" y="559.8066">m_refreshOnLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="566.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="219" y="578.9268">m_timestampPrecision : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="586.0029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="219" y="598.0469">m_persistMessages : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="605.123"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="219" y="617.167">m_validateLengthAndCheckSum : bool</text><line style="stroke:#181818;stroke-width:1.0;" x1="200" x2="843" y1="624.2432" y2="624.2432"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="632.2432"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="219" y="644.2871">send(Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="651.3633"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="219" y="663.4072">send(const string&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="670.4834"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="220" x="219" y="682.5273">sendRaw(Message&amp;, int = 0) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="689.6035"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="159" x="219" y="701.6475">resend(Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="708.7236"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="219" y="720.7676">shouleSendReset() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="727.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="219" y="739.8877">disconnect() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="746.9639"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="219" y="759.0078">generateLogon() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="766.084"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="249" x="219" y="778.1279">generateLogon(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="785.2041"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="461" x="219" y="797.248">generateResendRequest(const BeginString&amp;, const MsgSeqNum&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="804.3242"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="244" x="219" y="816.3682">generateSequenceReset(int, int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="823.4443"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="219" y="835.4883">generateHeartbeat() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="842.5645"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="271" x="219" y="854.6084">generateHeartbeat(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="861.6846"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="295" x="219" y="873.7285">generateTestRequest(const std::string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="880.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="319" x="219" y="892.8486">generateReject(const Message&amp;, int, int = 0) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="899.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="366" x="219" y="911.9688">generateReject(const Message&amp;, const std::string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="919.0449"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="376" x="219" y="931.0889">generateBusinessReject(const Message&amp;, int, int = 0) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="938.165"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="219" y="950.209">generateLogout( const std::string&amp;= "") : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="957.2852"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="398" x="219" y="969.3291">populateRejectReason(Message&amp;, int, const std::string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="976.4053"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="375" x="219" y="988.4492">populateRejectReason(Message&amp;, const std::string&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="995.5254" y2="995.5254"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1003.5254"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="74" x="219" y="1015.5693">next() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1022.6455"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="219" y="1034.6895">next(const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1041.7656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="383" x="219" y="1053.8096">next(const string&amp;, const UtcTimeStamp&amp;, bool = false) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1060.8857"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="219" y="1072.9297">next(const Message&amp;, const UtcTimeStamp&amp;, bool = false) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1080.0059"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="336" x="219" y="1092.0498">verfy(const Message&amp;, bool = true, bool = true) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1099.126"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="465" x="219" y="1111.1699">fromCallback(const MsgType&amp;, const Message&amp;, const SessionID&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1118.2461"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="219" y="1130.29">nextLogon(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1137.3662"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="368" x="219" y="1149.4102">nextLogout(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1156.4863"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="219" y="1168.5303">nextHeartbeat(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1175.6064"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="405" x="219" y="1187.6504">nextTestRequest(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1194.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="219" y="1206.7705">nextReject(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1213.8467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="425" x="219" y="1225.8906">nextSequenceReset(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1232.9668"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="426" x="219" y="1245.0107">nextResendRequest(const Message&amp;, const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1252.0869"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="287" x="219" y="1264.1309">nextQueued(int, const UtcTimeStamp&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1271.207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="219" y="1283.251">nextQueued(const UtcTimeStamp&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="1290.3271" y2="1290.3271"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1298.3271"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="284" x="219" y="1310.3711">persist(const Message&amp;, const string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1317.4473"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="219" y="1329.4912">setNextSenderMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1336.5674"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="232" x="219" y="1348.6113">SetNextTargetMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1355.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="219" y="1367.7314">getExpectedSenderNum() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1374.8076"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="219" y="1386.8516">getExpectedTargetNum() : int</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="1393.9277" y2="1393.9277"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1401.9277"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="219" y="1413.9717">doBadTime(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1421.0479"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="243" x="219" y="1433.0918">doBadCompID(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1440.168"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="219" y="1452.2119">doPossDup(const Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1459.2881"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="261" x="219" y="1471.332">doTargetTooLow(const Message&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1478.4082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="267" x="219" y="1490.4521">doTargetTooHight(const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1497.5283"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="221" x="219" y="1509.5723">insertSendingTime(Header&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1516.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="511" x="219" y="1528.6924">insertOrigSendingTime(Header&amp;, const UtcTimeStamp&amp; = UtcTimeStamp()) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1535.7686"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="219" y="1547.8125">fill(Header&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="1554.8887" y2="1554.8887"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1562.8887"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="219" y="1574.9326">reset() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1582.0088"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="321" x="219" y="1594.0527">sendToTarget(Message&amp;, const string&amp; = "") : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1601.1289"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="219" y="1613.1729">sendToTarget(Message&amp;, cosnt SessionID&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1620.249"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="619" x="219" y="1632.293">sendToTarget(Message&amp;, const SenderCompID&amp;, const TargetCompID&amp;, const string&amp; = "") : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1639.3691"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="501" x="219" y="1651.4131">sendToTarget(Message&amp;, const string&amp;, const string&amp;, const string&amp; = "") : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1658.4893"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="197" x="219" y="1670.5332">getSessions() : set&lt;SessoinID&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1677.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="279" x="219" y="1689.6533">lookupSession(const SessionID&amp;) : Session*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1696.7295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="332" x="219" y="1708.7734">lookupSession(const string&amp;, bool = false) : Session*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1715.8496"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="288" x="219" y="1727.8936">isSessionRegistered(const SessionID&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1734.9697"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="289" x="219" y="1747.0137">registerSession(const SessionID&amp;) : Session&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1754.0898"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="234" x="219" y="1766.1338">unregisterSession(const SessionID&amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1773.21"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="219" y="1785.2539">numSessions() : size_t</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1792.3301"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="185" x="219" y="1804.374">addSession(Sessioni&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1811.4502"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="204" x="219" y="1823.4941">removeSession(Session&amp;) : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="1830.5703" y2="1830.5703"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1838.5703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="219" y="1850.6143">logon() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1857.6904"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="219" y="1869.7344">logout(const string&amp; = "") : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1876.8105"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="103" x="219" y="1888.8545">isEnable() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1895.9307"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="219" y="1907.9746">sentLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1915.0508"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="219" y="1927.0947">sentLogout() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1934.1709"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="219" y="1946.2148">receivedLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1953.291"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="219" y="1965.335">isLoggedOn() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1972.4111"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="219" y="1984.4551">refresh() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="200" x2="843" y1="1991.5313" y2="1991.5313"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="207" y="1999.5313"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="219" y="2011.5752">getter &amp; setter</text></g><!--MD5=[d72449d1c43038d257a52222c974564c]
class MessageStore--><g id="elem_MessageStore"><rect codeLine="126" fill="#F1F1F1" height="258.3213" id="MessageStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="262" x="296.5" y="3864"/><ellipse cx="377.25" cy="3880" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M373.8438,3874.2813 L373.8438,3873.875 L380.1563,3873.875 L380.1563,3874.2813 L377.625,3874.2813 Q377.625,3874.2813 377.7734,3874.4141 Q377.9219,3874.5469 377.9219,3874.8125 L377.9219,3884.2969 Q377.9219,3884.5625 378.1406,3884.6953 Q378.3594,3884.8281 378.3594,3884.8281 L380.1563,3884.8281 L380.1563,3885.2344 L373.8438,3885.2344 L373.8438,3884.8281 L375.375,3884.8281 Q375.7031,3884.8281 375.8359,3884.6953 Q375.9688,3884.5625 375.9688,3884.2969 L375.9688,3874.8125 Q375.9688,3874.5469 375.8359,3874.4141 Q375.7031,3874.2813 375.375,3874.2813 L373.8438,3874.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="92" x="397.75" y="3886.4839">MessageStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="297.5" x2="557.5" y1="3896" y2="3896"/><line style="stroke:#181818;stroke-width:0.5;" x1="297.5" x2="557.5" y1="3904" y2="3904"/><ellipse cx="307.5" cy="3915" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="173" x="316.5" y="3924.0439">set(int, const string&amp;) : bool</text><ellipse cx="307.5" cy="3934.1201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="211" x="316.5" y="3943.1641">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="307.5" cy="3953.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="212" x="316.5" y="3962.2842">getNextSenderMsgSeqNum() : int</text><ellipse cx="307.5" cy="3972.3604" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="208" x="316.5" y="3981.4043">getNextTargetMsgSeqNum() : int</text><ellipse cx="307.5" cy="3991.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="236" x="316.5" y="4000.5244">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="307.5" cy="4010.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="232" x="316.5" y="4019.6445">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="307.5" cy="4029.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="225" x="316.5" y="4038.7646">incrNextSenderMsgSeqNum() : void</text><ellipse cx="307.5" cy="4048.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="221" x="316.5" y="4057.8848">incrNextTargetMsgSeqNum() : void</text><ellipse cx="307.5" cy="4067.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="227" x="316.5" y="4077.0049">getCreateionTime() : UtcTimeStamp</text><ellipse cx="307.5" cy="4087.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="79" x="316.5" y="4096.125">reset() : void</text><ellipse cx="307.5" cy="4106.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="92" x="316.5" y="4115.2451">refresh() : void</text></g><!--MD5=[b8847165ef77eb0382d01d47c11b7649]
class MessageStoreFactory--><g id="elem_MessageStoreFactory"><rect codeLine="142" fill="#F1F1F1" height="86.2402" id="MessageStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="296" x="741.5" y="2897"/><ellipse cx="815.25" cy="2913" fill="#B4A7E5" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M811.8438,2907.2813 L811.8438,2906.875 L818.1563,2906.875 L818.1563,2907.2813 L815.625,2907.2813 Q815.625,2907.2813 815.7734,2907.4141 Q815.9219,2907.5469 815.9219,2907.8125 L815.9219,2917.2969 Q815.9219,2917.5625 816.1406,2917.6953 Q816.3594,2917.8281 816.3594,2917.8281 L818.1563,2917.8281 L818.1563,2918.2344 L811.8438,2918.2344 L811.8438,2917.8281 L813.375,2917.8281 Q813.7031,2917.8281 813.8359,2917.6953 Q813.9688,2917.5625 813.9688,2917.2969 L813.9688,2907.8125 Q813.9688,2907.5469 813.8359,2907.4141 Q813.7031,2907.2813 813.375,2907.2813 L811.8438,2907.2813 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="140" x="835.75" y="2919.4839">MessageStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="742.5" x2="1036.5" y1="2929" y2="2929"/><line style="stroke:#181818;stroke-width:0.5;" x1="742.5" x2="1036.5" y1="2937" y2="2937"/><ellipse cx="752.5" cy="2948" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="270" x="761.5" y="2957.0439">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="752.5" cy="2967.1201" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacing" textLength="191" x="761.5" y="2976.1641">destroy(MessageStore*) : void</text></g><!--MD5=[79b8afc0d503439fba9935c5662d7215]
class FileStoreFactory--><g id="elem_FileStoreFactory"><rect codeLine="149" fill="#F1F1F1" height="124.4805" id="FileStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="294" x="593.5" y="3931"/><ellipse cx="683.75" cy="3947" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M682.3281,3952.3594 Q680.4688,3952.3594 679.375,3950.9688 Q678.2813,3949.5781 678.2813,3946.5938 Q678.2813,3944.0625 679.4453,3942.4063 Q680.6094,3940.75 682.5938,3940.75 Q684.0625,3940.75 684.5313,3940.875 Q685,3941.0781 685,3941.0781 Q685,3941.0781 685,3941.0078 Q685,3940.9375 685.6094,3940.0156 L686.6563,3943.6719 L685.3281,3944.0781 Q684.8594,3942.5313 684.1953,3941.8672 Q683.5313,3941.2031 682.4688,3941.2031 Q682.0781,3941.2031 681.3125,3942.7344 Q680.5469,3944.2656 680.5469,3946.5156 Q680.5469,3948.9844 681.2109,3950.375 Q681.875,3951.7656 682.4063,3951.7656 Q683.4688,3951.7656 684.2266,3951 Q684.9844,3950.2344 685.3281,3948.5781 L686.6563,3949.1719 Q686.3281,3950.5781 685.4297,3951.4688 Q684.5313,3952.3594 682.3281,3952.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="704.25" y="3953.4839">FileStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="594.5" x2="886.5" y1="3963" y2="3963"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="601.5" y="3971"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="613.5" y="3983.0439">m_path : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="601.5" y="3990.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="613.5" y="4002.1641">m_settings : SessionSettings</text><line style="stroke:#181818;stroke-width:0.5;" x1="594.5" x2="886.5" y1="4009.2402" y2="4009.2402"/><ellipse cx="604.5" cy="4020.2402" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="613.5" y="4029.2842">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="604.5" cy="4039.3604" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="613.5" y="4048.4043">destroy(MessageStore*) : void</text></g><!--MD5=[000865ccd26c04f1fbf7d019843446a7]
class FileStore--><g id="elem_FileStore"><rect codeLine="160" fill="#F1F1F1" height="553.123" id="FileStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="296.5" y="4230"/><ellipse cx="393.75" cy="4246" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M392.3281,4251.3594 Q390.4688,4251.3594 389.375,4249.9688 Q388.2813,4248.5781 388.2813,4245.5938 Q388.2813,4243.0625 389.4453,4241.4063 Q390.6094,4239.75 392.5938,4239.75 Q394.0625,4239.75 394.5313,4239.875 Q395,4240.0781 395,4240.0781 Q395,4240.0781 395,4240.0078 Q395,4239.9375 395.6094,4239.0156 L396.6563,4242.6719 L395.3281,4243.0781 Q394.8594,4241.5313 394.1953,4240.8672 Q393.5313,4240.2031 392.4688,4240.2031 Q392.0781,4240.2031 391.3125,4241.7344 Q390.5469,4243.2656 390.5469,4245.5156 Q390.5469,4247.9844 391.2109,4249.375 Q391.875,4250.7656 392.4063,4250.7656 Q393.4688,4250.7656 394.2266,4250 Q394.9844,4249.2344 395.3281,4247.5781 L396.6563,4248.1719 Q396.3281,4249.5781 395.4297,4250.4688 Q394.5313,4251.3594 392.3281,4251.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="414.25" y="4252.4839">FileStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="297.5" x2="555.5" y1="4262" y2="4262"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4270"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="316.5" y="4282.0439">m_cache : MemoryStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4289.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="316.5" y="4301.1641">m_offsets : map&lt;int, pair&lt;int, int&gt;&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4308.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="316.5" y="4320.2842">m_msgFileName : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4327.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="316.5" y="4339.4043">m_headerFileName : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4346.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="183" x="316.5" y="4358.5244">m_seqNumsFileNmae : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4365.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="114" x="316.5" y="4377.6445">m_msgFile : FILE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4384.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="133" x="316.5" y="4396.7646">m_headerFile : FILE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4403.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="316.5" y="4415.8848">m_seqNumsFile : FILE*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4422.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="316.5" y="4435.0049">m_sessionFile : FILE*</text><line style="stroke:#181818;stroke-width:1.0;" x1="297.5" x2="555.5" y1="4442.0811" y2="4442.0811"/><ellipse cx="307.5" cy="4453.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="316.5" y="4462.125">set(int, const string&amp;) : bool</text><ellipse cx="307.5" cy="4472.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="316.5" y="4481.2451">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="307.5" cy="4491.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="316.5" y="4500.3652">getNextSenderMsgSeqNum() : int</text><ellipse cx="307.5" cy="4510.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="316.5" y="4519.4854">getNextTargetMsgSeqNum() : int</text><ellipse cx="307.5" cy="4529.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="316.5" y="4538.6055">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="307.5" cy="4548.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="316.5" y="4557.7256">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="307.5" cy="4567.8018" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="316.5" y="4576.8457">incrNextSenderMsgSeqNum() : void</text><ellipse cx="307.5" cy="4586.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="316.5" y="4595.9658">incrNextTargetMsgSeqNum() : void</text><ellipse cx="307.5" cy="4606.042" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="316.5" y="4615.0859">getCreateionTime() : UtcTimeStamp</text><ellipse cx="307.5" cy="4625.1621" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="316.5" y="4634.2061">reset() : void</text><ellipse cx="307.5" cy="4644.2822" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="316.5" y="4653.3262">refresh() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="297.5" x2="555.5" y1="4660.4023" y2="4660.4023"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4668.4023"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="107" x="316.5" y="4680.4463">open(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4687.5225"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="316.5" y="4699.5664">populateCache() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4706.6426"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="316.5" y="4718.6865">readFromFile(int, int, string&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4725.7627"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="316.5" y="4737.8066">setSeqNum() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4744.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="316.5" y="4756.9268">setSession() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="304.5" y="4764.0029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="316.5" y="4776.0469">get(int, string&amp;) : bool</text></g><!--MD5=[411ccd82ca7b474ae6320c7d31367dd6]
class MemoryStore--><g id="elem_MemoryStore"><rect codeLine="194" fill="#F1F1F1" height="334.8018" id="MemoryStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="516.5" y="4862"/><ellipse cx="600.25" cy="4878" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M598.8281,4883.3594 Q596.9688,4883.3594 595.875,4881.9688 Q594.7813,4880.5781 594.7813,4877.5938 Q594.7813,4875.0625 595.9453,4873.4063 Q597.1094,4871.75 599.0938,4871.75 Q600.5625,4871.75 601.0313,4871.875 Q601.5,4872.0781 601.5,4872.0781 Q601.5,4872.0781 601.5,4872.0078 Q601.5,4871.9375 602.1094,4871.0156 L603.1563,4874.6719 L601.8281,4875.0781 Q601.3594,4873.5313 600.6953,4872.8672 Q600.0313,4872.2031 598.9688,4872.2031 Q598.5781,4872.2031 597.8125,4873.7344 Q597.0469,4875.2656 597.0469,4877.5156 Q597.0469,4879.9844 597.7109,4881.375 Q598.375,4882.7656 598.9063,4882.7656 Q599.9688,4882.7656 600.7266,4882 Q601.4844,4881.2344 601.8281,4879.5781 L603.1563,4880.1719 Q602.8281,4881.5781 601.9297,4882.4688 Q601.0313,4883.3594 598.8281,4883.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="620.75" y="4884.4839">MemoryStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="517.5" x2="775.5" y1="4894" y2="4894"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="524.5" y="4902"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="536.5" y="4914.0439">m_messages : map&lt;int, string&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="524.5" y="4921.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="536.5" y="4933.1641">m_nextSenderMsgSeqNum : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="524.5" y="4940.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="193" x="536.5" y="4952.2842">m_nextTargetMsgSeqNum : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="524.5" y="4959.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="536.5" y="4971.4043">m_creationTime : UtcTimeStamp</text><line style="stroke:#181818;stroke-width:0.5;" x1="517.5" x2="775.5" y1="4978.4805" y2="4978.4805"/><ellipse cx="527.5" cy="4989.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="536.5" y="4998.5244">set(int, const string&amp;) : bool</text><ellipse cx="527.5" cy="5008.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="536.5" y="5017.6445">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="527.5" cy="5027.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="536.5" y="5036.7646">getNextSenderMsgSeqNum() : int</text><ellipse cx="527.5" cy="5046.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="536.5" y="5055.8848">getNextTargetMsgSeqNum() : int</text><ellipse cx="527.5" cy="5065.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="536.5" y="5075.0049">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="527.5" cy="5085.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="536.5" y="5094.125">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="527.5" cy="5104.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="536.5" y="5113.2451">incrNextSenderMsgSeqNum() : void</text><ellipse cx="527.5" cy="5123.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="536.5" y="5132.3652">incrNextTargetMsgSeqNum() : void</text><ellipse cx="527.5" cy="5142.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="536.5" y="5151.4854">getCreateionTime() : UtcTimeStamp</text><ellipse cx="527.5" cy="5161.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="536.5" y="5170.6055">reset() : void</text><ellipse cx="527.5" cy="5180.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="536.5" y="5189.7256">refresh() : void</text></g><!--MD5=[6ee3a88a70d1091b0f46575b9f500321]
class MySQLStoreFactory--><g id="elem_MySQLStoreFactory"><rect codeLine="216" fill="#F1F1F1" height="315.6816" id="MySQLStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="412" x="922.5" y="3835"/><ellipse cx="1060.25" cy="3851" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1058.8281,3856.3594 Q1056.9688,3856.3594 1055.875,3854.9688 Q1054.7813,3853.5781 1054.7813,3850.5938 Q1054.7813,3848.0625 1055.9453,3846.4063 Q1057.1094,3844.75 1059.0938,3844.75 Q1060.5625,3844.75 1061.0313,3844.875 Q1061.5,3845.0781 1061.5,3845.0781 Q1061.5,3845.0781 1061.5,3845.0078 Q1061.5,3844.9375 1062.1094,3844.0156 L1063.1563,3847.6719 L1061.8281,3848.0781 Q1061.3594,3846.5313 1060.6953,3845.8672 Q1060.0313,3845.2031 1058.9688,3845.2031 Q1058.5781,3845.2031 1057.8125,3846.7344 Q1057.0469,3848.2656 1057.0469,3850.5156 Q1057.0469,3852.9844 1057.7109,3854.375 Q1058.375,3855.7656 1058.9063,3855.7656 Q1059.9688,3855.7656 1060.7266,3855 Q1061.4844,3854.2344 1061.8281,3852.5781 L1063.1563,3853.1719 Q1062.8281,3854.5781 1061.9297,3855.4688 Q1061.0313,3856.3594 1058.8281,3856.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="1080.75" y="3857.4839">MySQLStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="923.5" x2="1333.5" y1="3867" y2="3867"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="942.5" y="3887.0439">m_connectionPoolPtr : MySQLConnectionPoolPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3894.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="942.5" y="3906.1641">m_settings : SessionSettings</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3913.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="942.5" y="3925.2842">m_dictionary : Dictionary</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3932.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="942.5" y="3944.4043">m_database : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3951.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="942.5" y="3963.5244">m_password : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3970.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="942.5" y="3982.6445">m_user : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="3989.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="942.5" y="4001.7646">m_password : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="4008.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="942.5" y="4020.8848">m_host : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="4027.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="942.5" y="4040.0049">m_port : short</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="4047.0811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="942.5" y="4059.125">m_useSettings : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="4066.2012"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="942.5" y="4078.2451">m_useDictionary : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="923.5" x2="1333.5" y1="4085.3213" y2="4085.3213"/><ellipse cx="933.5" cy="4096.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="942.5" y="4105.3652">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="933.5" cy="4115.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="942.5" y="4124.4854">destroy(MessageStore*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="930.5" y="4131.5615"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="942.5" y="4143.6055">create(const SessionID&amp;, const Dictionary&amp;) : MessageStore*</text></g><!--MD5=[f0cb7611019f770c49ed7fff2e04718f]
class MySQLStore--><g id="elem_MySQLStore"><rect codeLine="236" fill="#F1F1F1" height="334.8018" id="MySQLStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="316" x="730.5" y="4339"/><ellipse cx="844.25" cy="4355" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M842.8281,4360.3594 Q840.9688,4360.3594 839.875,4358.9688 Q838.7813,4357.5781 838.7813,4354.5938 Q838.7813,4352.0625 839.9453,4350.4063 Q841.1094,4348.75 843.0938,4348.75 Q844.5625,4348.75 845.0313,4348.875 Q845.5,4349.0781 845.5,4349.0781 Q845.5,4349.0781 845.5,4349.0078 Q845.5,4348.9375 846.1094,4348.0156 L847.1563,4351.6719 L845.8281,4352.0781 Q845.3594,4350.5313 844.6953,4349.8672 Q844.0313,4349.2031 842.9688,4349.2031 Q842.5781,4349.2031 841.8125,4350.7344 Q841.0469,4352.2656 841.0469,4354.5156 Q841.0469,4356.9844 841.7109,4358.375 Q842.375,4359.7656 842.9063,4359.7656 Q843.9688,4359.7656 844.7266,4359 Q845.4844,4358.2344 845.8281,4356.5781 L847.1563,4357.1719 Q846.8281,4358.5781 845.9297,4359.4688 Q845.0313,4360.3594 842.8281,4360.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="864.75" y="4361.4839">MySQLStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="731.5" x2="1045.5" y1="4371" y2="4371"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="738.5" y="4379"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="750.5" y="4391.0439">m_cache : MemoryStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="738.5" y="4398.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="750.5" y="4410.1641">m_pConnection : MySQLConnection*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="738.5" y="4417.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="750.5" y="4429.2842">m_pConnectionPool : MySQLConnectionPool*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="738.5" y="4436.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="750.5" y="4448.4043">m_sessionID : SessionID</text><line style="stroke:#181818;stroke-width:0.5;" x1="731.5" x2="1045.5" y1="4455.4805" y2="4455.4805"/><ellipse cx="741.5" cy="4466.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="750.5" y="4475.5244">set(int, const string&amp;) : bool</text><ellipse cx="741.5" cy="4485.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="750.5" y="4494.6445">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="741.5" cy="4504.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="750.5" y="4513.7646">getNextSenderMsgSeqNum() : int</text><ellipse cx="741.5" cy="4523.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="750.5" y="4532.8848">getNextTargetMsgSeqNum() : int</text><ellipse cx="741.5" cy="4542.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="750.5" y="4552.0049">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="741.5" cy="4562.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="750.5" y="4571.125">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="741.5" cy="4581.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="750.5" y="4590.2451">incrNextSenderMsgSeqNum() : void</text><ellipse cx="741.5" cy="4600.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="750.5" y="4609.3652">incrNextTargetMsgSeqNum() : void</text><ellipse cx="741.5" cy="4619.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="750.5" y="4628.4854">getCreateionTime() : UtcTimeStamp</text><ellipse cx="741.5" cy="4638.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="750.5" y="4647.6055">reset() : void</text><ellipse cx="741.5" cy="4657.6816" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="750.5" y="4666.7256">refresh() : void</text></g><!--MD5=[2790b2acb5a5e640d4997528ba418bb9]
class OdbcStoreFactory--><g id="elem_OdbcStoreFactory"><rect codeLine="257" fill="#F1F1F1" height="239.2012" id="OdbcStoreFactory" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="412" x="1369.5" y="3873.5"/><ellipse cx="1513.25" cy="3889.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1511.8281,3894.8594 Q1509.9688,3894.8594 1508.875,3893.4688 Q1507.7813,3892.0781 1507.7813,3889.0938 Q1507.7813,3886.5625 1508.9453,3884.9063 Q1510.1094,3883.25 1512.0938,3883.25 Q1513.5625,3883.25 1514.0313,3883.375 Q1514.5,3883.5781 1514.5,3883.5781 Q1514.5,3883.5781 1514.5,3883.5078 Q1514.5,3883.4375 1515.1094,3882.5156 L1516.1563,3886.1719 L1514.8281,3886.5781 Q1514.3594,3885.0313 1513.6953,3884.3672 Q1513.0313,3883.7031 1511.9688,3883.7031 Q1511.5781,3883.7031 1510.8125,3885.2344 Q1510.0469,3886.7656 1510.0469,3889.0156 Q1510.0469,3891.4844 1510.7109,3892.875 Q1511.375,3894.2656 1511.9063,3894.2656 Q1512.9688,3894.2656 1513.7266,3893.5 Q1514.4844,3892.7344 1514.8281,3891.0781 L1516.1563,3891.6719 Q1515.8281,3893.0781 1514.9297,3893.9688 Q1514.0313,3894.8594 1511.8281,3894.8594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="1533.75" y="3895.9839">OdbcStoreFactory</text><line style="stroke:#181818;stroke-width:0.5;" x1="1370.5" x2="1780.5" y1="3905.5" y2="3905.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="3913.5"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1389.5" y="3925.5439">m_dictionary : Dictionary</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="3932.6201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="181" x="1389.5" y="3944.6641">m_settings : SessionSettings</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="3951.7402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="1389.5" y="3963.7842">m_user : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="3970.8604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="1389.5" y="3982.9043">m_password : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="3989.9805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="1389.5" y="4002.0244">m_connectionString : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="4009.1006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="1389.5" y="4021.1445">m_useSettings : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="4028.2207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1389.5" y="4040.2646">m_useDictionary : bool</text><line style="stroke:#181818;stroke-width:0.5;" x1="1370.5" x2="1780.5" y1="4047.3408" y2="4047.3408"/><ellipse cx="1380.5" cy="4058.3408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="268" x="1389.5" y="4067.3848">create(const SessionID&amp;) : MessageStore*</text><ellipse cx="1380.5" cy="4077.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="191" x="1389.5" y="4086.5049">destroy(MessageStore*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1377.5" y="4093.5811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="1389.5" y="4105.625">create(const SessionID&amp;, const Dictionary&amp;) : MessageStore*</text></g><!--MD5=[e503399637fecfeec8454e7290188a4d]
class OdbcStore--><g id="elem_OdbcStore"><rect codeLine="273" fill="#F1F1F1" height="334.8018" id="OdbcStore" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="260" x="1081.5" y="4339"/><ellipse cx="1173.25" cy="4355" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M1171.8281,4360.3594 Q1169.9688,4360.3594 1168.875,4358.9688 Q1167.7813,4357.5781 1167.7813,4354.5938 Q1167.7813,4352.0625 1168.9453,4350.4063 Q1170.1094,4348.75 1172.0938,4348.75 Q1173.5625,4348.75 1174.0313,4348.875 Q1174.5,4349.0781 1174.5,4349.0781 Q1174.5,4349.0781 1174.5,4349.0078 Q1174.5,4348.9375 1175.1094,4348.0156 L1176.1563,4351.6719 L1174.8281,4352.0781 Q1174.3594,4350.5313 1173.6953,4349.8672 Q1173.0313,4349.2031 1171.9688,4349.2031 Q1171.5781,4349.2031 1170.8125,4350.7344 Q1170.0469,4352.2656 1170.0469,4354.5156 Q1170.0469,4356.9844 1170.7109,4358.375 Q1171.375,4359.7656 1171.9063,4359.7656 Q1172.9688,4359.7656 1173.7266,4359 Q1174.4844,4358.2344 1174.8281,4356.5781 L1176.1563,4357.1719 Q1175.8281,4358.5781 1174.9297,4359.4688 Q1174.0313,4360.3594 1171.8281,4360.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="68" x="1193.75" y="4361.4839">OdbcStore</text><line style="stroke:#181818;stroke-width:0.5;" x1="1082.5" x2="1340.5" y1="4371" y2="4371"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1089.5" y="4379"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="1101.5" y="4391.0439">m_cache : MemoryStore</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1089.5" y="4398.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="222" x="1101.5" y="4410.1641">m_pConnection : OdbcConnection*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1089.5" y="4417.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="155" x="1101.5" y="4429.2842">m_sessionID : SessionID</text><line style="stroke:#181818;stroke-width:0.5;" x1="1082.5" x2="1340.5" y1="4436.3604" y2="4436.3604"/><ellipse cx="1092.5" cy="4447.3604" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="1101.5" y="4456.4043">set(int, const string&amp;) : bool</text><ellipse cx="1092.5" cy="4466.4805" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="1101.5" y="4475.5244">get(int, int, vector&lt;string&gt;&amp;) : void</text><ellipse cx="1092.5" cy="4485.6006" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="1101.5" y="4494.6445">getNextSenderMsgSeqNum() : int</text><ellipse cx="1092.5" cy="4504.7207" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="1101.5" y="4513.7646">getNextTargetMsgSeqNum() : int</text><ellipse cx="1092.5" cy="4523.8408" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="1101.5" y="4532.8848">setNextSenderMsgSeqNum(int) : void</text><ellipse cx="1092.5" cy="4542.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="1101.5" y="4552.0049">setNextTargetMsgSeqNum(int) : void</text><ellipse cx="1092.5" cy="4562.0811" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="1101.5" y="4571.125">incrNextSenderMsgSeqNum() : void</text><ellipse cx="1092.5" cy="4581.2012" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="1101.5" y="4590.2451">incrNextTargetMsgSeqNum() : void</text><ellipse cx="1092.5" cy="4600.3213" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="1101.5" y="4609.3652">getCreateionTime() : UtcTimeStamp</text><ellipse cx="1092.5" cy="4619.4414" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="1101.5" y="4628.4854">reset() : void</text><ellipse cx="1092.5" cy="4638.5615" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="1101.5" y="4647.6055">refresh() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1089.5" y="4654.6816"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="1101.5" y="4666.7256">populateCache() : void</text></g><!--MD5=[2242c43c330acc437358859ea7f59776]
class SessionState--><g id="elem_SessionState"><rect codeLine="295" fill="#F1F1F1" height="1631.8496" id="SessionState" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="324" x="359.5" y="2124"/><ellipse cx="475.75" cy="2140" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M474.3281,2145.3594 Q472.4688,2145.3594 471.375,2143.9688 Q470.2813,2142.5781 470.2813,2139.5938 Q470.2813,2137.0625 471.4453,2135.4063 Q472.6094,2133.75 474.5938,2133.75 Q476.0625,2133.75 476.5313,2133.875 Q477,2134.0781 477,2134.0781 Q477,2134.0781 477,2134.0078 Q477,2133.9375 477.6094,2133.0156 L478.6563,2136.6719 L477.3281,2137.0781 Q476.8594,2135.5313 476.1953,2134.8672 Q475.5313,2134.2031 474.4688,2134.2031 Q474.0781,2134.2031 473.3125,2135.7344 Q472.5469,2137.2656 472.5469,2139.5156 Q472.5469,2141.9844 473.2109,2143.375 Q473.875,2144.7656 474.4063,2144.7656 Q475.4688,2144.7656 476.2266,2144 Q476.9844,2143.2344 477.3281,2141.5781 L478.6563,2142.1719 Q478.3281,2143.5781 477.4297,2144.4688 Q476.5313,2145.3594 474.3281,2145.3594 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="496.25" y="2146.4839">SessionState</text><line style="stroke:#181818;stroke-width:0.5;" x1="360.5" x2="682.5" y1="2156" y2="2156"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2164"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="379.5" y="2176.0439">m_enabled : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2183.1201"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="379.5" y="2195.1641">m_receivedLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2202.2402"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="379.5" y="2214.2842">m_sentLogout : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2221.3604"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="379.5" y="2233.4043">m_sentLogon : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2240.4805"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="379.5" y="2252.5244">m_sentReset : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2259.6006"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="379.5" y="2271.6445">m_receivedReset : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2278.7207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="99" x="379.5" y="2290.7646">m_initiate : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2297.8408"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="132" x="379.5" y="2309.8848">m_logonTimeout : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2316.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="136" x="379.5" y="2329.0049">m_logoutTimeout : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2336.0811"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="379.5" y="2348.125">m_testRequest : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2355.2012"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="379.5" y="2367.2451">m_resendRange : ResendRange</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2374.3213"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="379.5" y="2386.3652">m_heartBtInt : HeartBtInt</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2393.4414"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="204" x="379.5" y="2405.4854">m_lastSentTime : UtcTimeStamp</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2412.5615"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="379.5" y="2424.6055">m_lastReceivedTime : UtcTimeStamp</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2431.6816"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="379.5" y="2443.7256">m_logoutReason : string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2450.8018"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="379.5" y="2462.8457">m_queue : map&lt;int, Message&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2469.9219"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="379.5" y="2481.9658">m_pStore : MessageStore*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2489.042"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="379.5" y="2501.0859">m_pLog : Log*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2508.1621"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="379.5" y="2520.2061">m_nullLog : NullLog</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2527.2822"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="105" x="379.5" y="2539.3262">m_mutex : Mutex</text><line style="stroke:#181818;stroke-width:1.0;" x1="360.5" x2="682.5" y1="2546.4023" y2="2546.4023"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2554.4023"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="379.5" y="2566.4463">getNextSenderMsgSeqNum() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2573.5225"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="205" x="379.5" y="2585.5664">getNextTargetMsgSeqNum() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2592.6426"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="234" x="379.5" y="2604.6865">setNextSenderMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2611.7627"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="379.5" y="2623.8066">setNextTargetMsgSeqNum(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2630.8828"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="223" x="379.5" y="2642.9268">incrNextSenderMsgSeqNum() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2650.0029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="379.5" y="2662.0469">incrNextTargetMsgSeqNum() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2669.123"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="215" x="379.5" y="2681.167">queue(int, const Message&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2688.2432"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="379.5" y="2700.2871">retrieve(int, Message&amp;)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2707.3633"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="379.5" y="2719.4072">clearQueue() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="360.5" x2="682.5" y1="2726.4834" y2="2726.4834"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2734.4834"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="379.5" y="2746.5273">onIncoming() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2753.6035"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="122" x="379.5" y="2765.6475">onOutgoing() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2772.7236"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="379.5" y="2784.7676">onEvent() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2791.8438"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="80" x="379.5" y="2803.8877">reset() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2810.9639"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="379.5" y="2823.0078">refresh() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2830.084"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="379.5" y="2842.1279">clear() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2849.2041"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="94" x="379.5" y="2861.248">backup() : void</text><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:1.0,2.0;" x1="360.5" x2="682.5" y1="2868.3242" y2="2868.3242"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2876.3242"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="379.5" y="2888.3682">receivedLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2895.4443"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="379.5" y="2907.4883">receivedLogon(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2914.5645"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="120" x="379.5" y="2926.6084">sentLogout() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2933.6846"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="379.5" y="2945.7285">sentLogout(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2952.8047"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="379.5" y="2964.8486">sentLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2971.9248"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="142" x="379.5" y="2983.9688">sentLogon(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="2991.0449"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="379.5" y="3003.0889">receivedReset() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3010.165"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="379.5" y="3022.209">receivedReset(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3029.2852"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="379.5" y="3041.3291">sentReset() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3048.4053"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="379.5" y="3060.4492">sentReset(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3067.5254"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="379.5" y="3079.5693">initiate() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3086.6455"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="116" x="379.5" y="3098.6895">initiate(bool) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3105.7656"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="379.5" y="3117.8096">logonTimeout() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3124.8857"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="149" x="379.5" y="3136.9297">logonTimeout(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3144.0059"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="127" x="379.5" y="3156.0498">logoutTimeout() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3163.126"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="138" x="379.5" y="3175.1699">logoutTimeout() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3182.2461"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="379.5" y="3194.29">testRequest() : int</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3201.3662"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="379.5" y="3213.4102">testRequest(int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3220.4863"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="379.5" y="3232.5303">resendRequested() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3239.6064"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="186" x="379.5" y="3251.6504">resendRange() : pair&lt;int, int&gt;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3258.7266"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="379.5" y="3270.7705">resendRage(int, int) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3277.8467"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="379.5" y="3289.8906">store() : MessageStore*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3296.9668"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="171" x="379.5" y="3309.0107">store(MessageStore) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3316.0869"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="379.5" y="3328.1309">log() : Log*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3335.207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="96" x="379.5" y="3347.251">log(Log*) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3354.3271"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="379.5" y="3366.3711">heartBtInt() : HeartBtInt&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3373.4473"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="192" x="379.5" y="3385.4912">heartBtInt() : const HeartBtInt&amp;</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3392.5674"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="209" x="379.5" y="3404.6113">heartBtInt(cosnt HeartBtInt) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3411.6875"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="272" x="379.5" y="3423.7314">lastSendTime(const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3430.8076"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="199" x="379.5" y="3442.8516">lastSendTime() : UtcTimeStamp</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3449.9277"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="298" x="379.5" y="3461.9717">lastReceivedTime(const UtcTimeStamp&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3469.0479"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="225" x="379.5" y="3481.0918">lastReceivedTime() : UtcTimeStamp</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3488.168"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="263" x="379.5" y="3500.2119">lastReceivedTime() : const UtcTimeStamp</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3507.2881"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="164" x="379.5" y="3519.332">shouleSendLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3526.4082"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="379.5" y="3538.4521">alreadySendLogon() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3545.5283"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="379.5" y="3557.5723">logonTimedOut() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3564.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="150" x="379.5" y="3576.6924">logoutTimedOut() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3583.7686"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="147" x="379.5" y="3595.8125">withinHeartBeat() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3602.8887"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="106" x="379.5" y="3614.9326">timedOut() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3622.0088"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="379.5" y="3634.0527">needHeartbeat() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3641.1289"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="162" x="379.5" y="3653.1729">needTestRequest() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3660.249"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="145" x="379.5" y="3672.293">logoutReason() : string</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3679.3691"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="379.5" y="3691.4131">logoutReson (const string&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3698.4893"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="379.5" y="3710.5332">set(int, string&amp;) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3717.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="379.5" y="3729.6533">get(int, int, vector&lt;string&gt;&amp;) : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="367.5" y="3736.7295"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="226" x="379.5" y="3748.7734">getCreateionTime() : UtcTimeStamp</text></g><path d="M6,4359 L6,4404.5088 A0,0 0 0 0 6,4404.5088 L222,4404.5088 A0,0 0 0 0 222,4404.5088 L222,4385.7544 L300.5,4693.0825 L222,4377.7544 L222,4369 L212,4359 L6,4359 A0,0 0 0 0 6,4359 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M212,4359 L212,4369 L222,4369 L212,4359 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="12" y="4378.8979">从文件中读出数据</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="12" y="4396.6523">比如：读出序列号，设置到内存中</text><path d="M6,4414.5088 L6,4477.772 A0,0 0 0 0 6,4477.772 L211,4477.772 A0,0 0 0 0 211,4477.772 L211,4450.1404 L300.5,4673.9624 L211,4442.1404 L211,4424.5088 L201,4414.5088 L6,4414.5088 A0,0 0 0 0 6,4414.5088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M201,4414.5088 L201,4424.5088 L211,4424.5088 L201,4414.5088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="184" x="12" y="4434.4067">1. 先读出文件中的数据写入内存</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="12" y="4452.1611">2. 将内存中的数据同步到文件</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="4469.9155">有什么意义？</text><path d="M6,4487.772 L6,4533.2808 A0,0 0 0 0 6,4533.2808 L196,4533.2808 A0,0 0 0 0 196,4533.2808 L196,4514.5264 L300.5,4455.6411 L196,4506.5264 L196,4497.772 L186,4487.772 L6,4487.772 A0,0 0 0 0 6,4487.772 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M186,4487.772 L186,4497.772 L196,4497.772 L186,4487.772 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="4507.6699">通信过程中，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="12" y="4525.4243">实时地将收到的消息写入文件</text><path d="M6,4543.2808 L6,4588.7896 A0,0 0 0 0 6,4588.7896 L222,4588.7896 A0,0 0 0 0 222,4588.7896 L222,4570.0352 L300.5,4731.3228 L222,4562.0352 L222,4553.2808 L212,4543.2808 L6,4543.2808 A0,0 0 0 0 6,4543.2808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M212,4543.2808 L212,4553.2808 L222,4553.2808 L212,4543.2808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="4563.1787">通信过程中，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="195" x="12" y="4580.9331">实时地将序列号的变更同步到文件</text><path d="M6,4598.7896 L6,4644.2983 A0,0 0 0 0 6,4644.2983 L261,4644.2983 A0,0 0 0 0 261,4644.2983 L261,4625.5439 L300.5,4750.4429 L261,4617.5439 L261,4608.7896 L251,4598.7896 L6,4598.7896 A0,0 0 0 0 6,4598.7896 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M251,4598.7896 L251,4608.7896 L261,4608.7896 L251,4598.7896 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="78" x="12" y="4618.6875">通信过程中，</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="234" x="12" y="4636.4419">实时地将会话创建时间的变更同步到文件</text><path d="M879,910.5 L879,929.2544 L381,656.9233 L879,937.2544 L879,956.0088 A0,0 0 0 0 879,956.0088 L1111,956.0088 A0,0 0 0 0 1111,956.0088 L1111,920.5 L1101,910.5 L879,910.5 A0,0 0 0 0 879,910.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1101,910.5 L1101,920.5 L1111,920.5 L1101,910.5 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="91" x="885" y="930.3979">发送消息的接口</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="211" x="885" y="948.1523">最终会调用 SocketConnection::send</text><path d="M879,966.0088 L879,975.886 L468,771.644 L879,983.886 L879,993.7632 A0,0 0 0 0 879,993.7632 L1128,993.7632 A0,0 0 0 0 1128,993.7632 L1128,976.0088 L1118,966.0088 L879,966.0088 A0,0 0 0 0 879,966.0088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1118,966.0088 L1118,976.0088 L1128,976.0088 L1118,966.0088 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="228" x="885" y="985.9067">generate* 方法用于构造与发送管理消息</text><path d="M879,1003.7632 L879,1022.5176 L293,1009.0854 L879,1030.5176 L879,1049.272 A0,0 0 0 0 879,1049.272 L1069,1049.272 A0,0 0 0 0 1069,1049.272 L1069,1013.7632 L1059,1003.7632 L879,1003.7632 A0,0 0 0 0 879,1003.7632 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1059,1003.7632 L1059,1013.7632 L1069,1013.7632 L1059,1003.7632 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="885" y="1023.6611">用于在长时间没有数据发送时</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="104" x="885" y="1041.4155">发送心跳包给对端</text><path d="M879,1059.272 L879,1078.0264 L602,1047.3257 L879,1086.0264 L879,1104.7808 A0,0 0 0 0 879,1104.7808 L1048,1104.7808 A0,0 0 0 0 1048,1104.7808 L1048,1069.272 L1038,1059.272 L879,1059.272 A0,0 0 0 0 879,1059.272 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1038,1059.272 L1038,1069.272 L1048,1069.272 L1038,1059.272 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="117" x="885" y="1079.1699">用于接收并解析消息</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="885" y="1096.9243">回调 Application::to* 方法</text><path d="M879,1114.7808 L879,1124.658 L503,1303.8872 L879,1132.658 L879,1142.5352 A0,0 0 0 0 879,1142.5352 L1030,1142.5352 A0,0 0 0 0 1030,1142.5352 L1030,1124.7808 L1020,1114.7808 L879,1114.7808 A0,0 0 0 0 879,1114.7808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><path d="M1020,1114.7808 L1020,1124.7808 L1030,1124.7808 L1020,1114.7808 " fill="#FEFFDD" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="130" x="885" y="1134.6787">发送消息后递增序列号</text><!--MD5=[f04cc391dec32973609787e8d7d06a9f]
link Session to SessionState--><g id="link_Session_SessionState"><path codeLine="445" d="M521.5,2019.26 C521.5,2052.46 521.5,2085.61 521.5,2118.55 " fill="none" id="Session-to-SessionState" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="521.5,2123.83,525.5,2114.83,521.5,2118.83,517.5,2114.83,521.5,2123.83" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="522.5" y="2066.8979">contains</text></g><!--MD5=[bba7de145f0463b3b009117c51dcfccc]
link FileStore to MemoryStore--><g id="link_FileStore_MemoryStore"><path codeLine="446" d="M542.94,4783.26 C553.52,4808.31 564.02,4833.18 574.05,4856.93 " fill="none" id="FileStore-to-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="576.05,4861.66,576.244,4851.8131,574.1097,4857.0518,568.8709,4854.9175,576.05,4861.66" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="563.5" y="4828.8979">contains</text></g><!--MD5=[8e1580056fbaaa4990ce01517a004311]
link MySQLStore to MemoryStore--><g id="link_MySQLStore_MemoryStore"><path codeLine="447" d="M811.1,4674.14 C783.94,4732.61 753.4,4798.36 726.07,4857.2 " fill="none" id="MySQLStore-to-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="723.94,4861.78,731.3718,4855.3172,726.0552,4857.2494,724.1229,4851.9328,723.94,4861.78" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="746.5" y="4828.8979">contains</text></g><!--MD5=[5ea25877ad40c0fd10b91ec41c419e12]
link OdbcStore to MemoryStore--><g id="link_OdbcStore_MemoryStore"><path codeLine="448" d="M1141.57,4674.02 C1120.47,4712.59 1094.72,4751.52 1064.5,4783 C984.63,4866.21 870.48,4930.68 781.64,4972.64 " fill="none" id="OdbcStore-to-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="#181818" points="776.9,4974.87,786.7467,4974.6616,781.4251,4972.7431,783.3436,4967.4215,776.9,4974.87" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="49" x="1027.5" y="4828.8979">contains</text></g><!--MD5=[b3e17db0a5ae13c5564e5baefd96b568]
link MessageStoreFactory to MessageStore--><g id="link_MessageStoreFactory_MessageStore"><path codeLine="450" d="M890.54,2983.15 C891.62,3111.7 879.39,3505.2 701.5,3756 C663.48,3809.61 627.29,3793.29 576.5,3835 C566.89,3842.9 557.27,3851.37 547.81,3860.15 " fill="none" id="MessageStoreFactory-to-MessageStore" style="stroke:#181818;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="#181818" points="544.05,3863.67,553.365,3860.4715,547.7119,3860.2656,547.9179,3854.6124,544.05,3863.67" style="stroke:#181818;stroke-width:1.0;"/></g><!--MD5=[6e321f66f42d5f78e40fb13dbb63ca68]
reverse link MessageStoreFactory to FileStoreFactory--><g id="link_MessageStoreFactory_FileStoreFactory"><path codeLine="451" d="M880.7,3003.09 C854.21,3189.96 775.43,3745.58 749.15,3931 " fill="none" id="MessageStoreFactory-backto-FileStoreFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="873.78,3001.99,883.52,2983.18,887.64,3003.96,873.78,3001.99" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="769.5" y="3801.8979">implements</text></g><!--MD5=[c6c48c64ffc953171533c9258a543824]
reverse link MessageStoreFactory to MySQLStoreFactory--><g id="link_MessageStoreFactory_MySQLStoreFactory"><path codeLine="452" d="M903.53,3002.69 C940.08,3163.42 1039.12,3598.95 1092.78,3834.94 " fill="none" id="MessageStoreFactory-backto-MySQLStoreFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="896.7,3004.23,899.09,2983.18,910.35,3001.12,896.7,3004.23" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1083.5" y="3801.8979">implements</text></g><!--MD5=[3eb00bb3dc7b315fe03b3d154a7a12d0]
reverse link MessageStoreFactory to OdbcStoreFactory--><g id="link_MessageStoreFactory_OdbcStoreFactory"><path codeLine="453" d="M928,2999.98 C1037.33,3167.48 1351.23,3648.41 1498.05,3873.34 " fill="none" id="MessageStoreFactory-backto-OdbcStoreFactory" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="922.1,3003.75,917.03,2983.18,933.82,2996.1,922.1,3003.75" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="1444.5" y="3801.8979">implements</text></g><!--MD5=[5666007e65dddd747cae9ef58d816d37]
reverse link MessageStore to FileStore--><g id="link_MessageStore_FileStore"><path codeLine="454" d="M427.21,4142.32 C427.16,4169.99 427.1,4199.7 427.04,4229.78 " fill="none" id="MessageStore-backto-FileStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="420.21,4142.07,427.25,4122.08,434.21,4142.1,420.21,4142.07" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="427.5" y="4196.8979">implements</text></g><!--MD5=[acb95e309764459ab4d1de3f474e5d8b]
reverse link MessageStore to MySQLStore--><g id="link_MessageStore_MySQLStore"><path codeLine="455" d="M557.1,4135.6 C563.51,4140.98 569.98,4146.14 576.5,4151 C600.08,4168.59 610.38,4165.69 635.5,4181 C667.31,4200.39 677.6,4203.23 703.5,4230 C734.95,4262.5 764.5,4300.98 790.37,4338.71 " fill="none" id="MessageStore-backto-MySQLStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="552.32,4140.72,541.86,4122.29,561.53,4130.17,552.32,4140.72" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="667.5" y="4196.8979">implements</text></g><!--MD5=[5cdbaf528d8fa8b6a4f8e392145ad007]
reverse link MessageStore to OdbcStore--><g id="link_MessageStore_OdbcStore"><path codeLine="456" d="M549.95,4134.47 C558.52,4140.6 567.39,4146.19 576.5,4151 C625.07,4176.66 1019.81,4198.06 1064.5,4230 C1102.65,4257.27 1131.8,4297.56 1153.68,4338.97 " fill="none" id="MessageStore-backto-OdbcStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="545.4,4139.81,533.83,4122.05,553.95,4128.72,545.4,4139.81" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="913.5" y="4196.8979">implements</text></g><!--MD5=[234a8aff4120347f47bda490cbeedb04]
reverse link MessageStore to MemoryStore--><g id="link_MessageStore_MemoryStore"><path codeLine="457" d="M532.46,4139.32 C549.07,4168.2 564.16,4199.16 574.5,4230 C612.44,4343.17 631.86,4663.07 640.55,4861.93 " fill="none" id="MessageStore-backto-MemoryStore" style="stroke:#181818;stroke-width:1.0;"/><polygon fill="none" points="526.43,4142.87,522.24,4122.1,538.47,4135.72,526.43,4142.87" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="636.5" y="4512.8979">implements</text></g><!--MD5=[2c7b1f4c66aca9266dcc7ee9734bc256]
@startuml quickfix_session_fixsession_classmap
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 以下是类实例的定义
package "会话逻辑层" #DDDDDD
{
' 维护状态并实现 FIX 会话的逻辑。
class Session
{
    ' 成员变量
    - m_application : Application&
    - m_sessionID : SessionID
    - m_state : SessionState
    - m_pResponder : Responder*
    ..
    - m_dataDictionaryProvider : DataDictionaryProvider
    - m_messageStoreFactory : MessageStoreFactory&
    - m_pLogFactory : LogFactory*
    - m_mutex : Mutex
    ..
    {static}- s_sessions : map<SessionID, Session*>
    {static}- s_sessionIDs : set<SessionID>
    {static}- s_registered : map<SessionID, Session*>
    {static}- s_mutex : Mutex
    ..
    ' 与配置文件中的配置项相对应的成员变量
    - m_sessionTime : TimeRange
    - m_logonTime : TimeRange
    - m_senderDefaultApplVerID : string
    - m_targetDefaultApplVerID : string
    - m_sendRedundantResendRequests : bool
    - m_checkCompId : bool
    - m_checkLatency : bool
    - m_maxLatency : int
    - m_resetOnLogon : bool
    - m_resetOnLogout : bool
    - m_resetOnDisconnect : bool
    - m_refreshOnLogon : bool
    - m_timestampPrecision : int
    - m_persistMessages : bool
    - m_validateLengthAndCheckSum : bool
    - -
    ' 成员函数
    - send(Message&) : bool
    - send(const string&) : bool
    - sendRaw(Message&, int = 0) : bool
    - resend(Message&) : bool
    - shouleSendReset() : bool
    - disconnect() : void
    - generateLogon() : void
    - generateLogon(const Message&) : void
    - generateResendRequest(const BeginString&, const MsgSeqNum&) : void
    - generateSequenceReset(int, int) : void
    - generateHeartbeat() : void
    - generateHeartbeat(const Message&) : void
    - generateTestRequest(const std::string&) : void
    - generateReject(const Message&, int, int = 0) : void
    - generateReject(const Message&, const std::string&) : void
    - generateBusinessReject(const Message&, int, int = 0) : void
    - generateLogout( const std::string&= "") : void
    - populateRejectReason(Message&, int, const std::string&) : void
    - populateRejectReason(Message&, const std::string&) : void
    ..
    - next() : void
    - next(const UtcTimeStamp&) : void
    - next(const string&, const UtcTimeStamp&, bool = false) : void
    - next(const Message&, const UtcTimeStamp&, bool = false) : void
    - verfy(const Message&, bool = true, bool = true) : bool
    - fromCallback(const MsgType&, const Message&, const SessionID&) : void
    - nextLogon(const Message&, const UtcTimeStamp&) : void
    - nextLogout(const Message&, const UtcTimeStamp&) : void
    - nextHeartbeat(const Message&, const UtcTimeStamp&) : void
    - nextTestRequest(const Message&, const UtcTimeStamp&) : void
    - nextReject(const Message&, const UtcTimeStamp&) : void
    - nextSequenceReset(const Message&, const UtcTimeStamp&) : void
    - nextResendRequest(const Message&, const UtcTimeStamp&) : void
    - nextQueued(int, const UtcTimeStamp&) : bool
    - nextQueued(const UtcTimeStamp&) : void
    ..
    - persist(const Message&, const string&) : void
    - setNextSenderMsgSeqNum(int) : void
    - SetNextTargetMsgSeqNum(int) : void
    - getExpectedSenderNum() : int
    - getExpectedTargetNum() : int
    ..
    - doBadTime(const Message&) : void
    - doBadCompID(const Message&) : void
    - doPossDup(const Message&) : bool
    - doTargetTooLow(const Message&) : bool
    - doTargetTooHight(const Message&) : void
    - insertSendingTime(Header&) : void
    - insertOrigSendingTime(Header&, const UtcTimeStamp& = UtcTimeStamp()) : void
    - fill(Header&) : void
    ..
    - reset() : void
    {static}- sendToTarget(Message&, const string& = "") : bool
    {static}- sendToTarget(Message&, cosnt SessionID&) : bool
    {static}- sendToTarget(Message&, const SenderCompID&, const TargetCompID&, const string& = "") : bool
    {static}- sendToTarget(Message&, const string&, const string&, const string& = "") : bool
    {static}- getSessions() : set<SessoinID>
    {static}- lookupSession(const SessionID&) : Session*
    {static}- lookupSession(const string&, bool = false) : Session*
    {static}- isSessionRegistered(const SessionID&) : bool
    {static}- registerSession(const SessionID&) : Session&
    {static}- unregisterSession(const SessionID&)
    {static}- numSessions() : size_t
    {static}- addSession(Sessioni&) : bool
    {static}- removeSession(Session&) : void
    ..
    ' 设置或获取状态相关的函数
    - logon() : void
    - logout(const string& = "") : void
    - isEnable() : bool
    - sentLogon() : bool
    - sentLogout() : bool
    - receivedLogon() : bool
    - isLoggedOn() : bool
    - refresh() : void
    ..
    ' 获取/设置成员变量的函数
    {method}- getter & setter
}
}
' end package

package "会话状态与序列号管理" #DDDDDD
{
interface MessageStore
{
    ' 成员函数
    {abstract}+ set(int, const string&) : bool
    {abstract}+ get(int, int, vector<string>&) : void
    {abstract}+ getNextSenderMsgSeqNum() : int
    {abstract}+ getNextTargetMsgSeqNum() : int
    {abstract}+ setNextSenderMsgSeqNum(int) : void
    {abstract}+ setNextTargetMsgSeqNum(int) : void
    {abstract}+ incrNextSenderMsgSeqNum() : void
    {abstract}+ incrNextTargetMsgSeqNum() : void
    {abstract}+ getCreateionTime() : UtcTimeStamp
    {abstract}+ reset() : void
    {abstract}+ refresh() : void
}

interface MessageStoreFactory
{
    ' 成员方法
    {abstract}+ create(const SessionID&) : MessageStore*
    {abstract}+ destroy(MessageStore*) : void
}

class FileStoreFactory
{
    ' 成员变量
    - m_path : string
    - m_settings : SessionSettings
    ' 成员函数
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
}

' 基于文件的存储实现
class FileStore
{
    ' 成员变量
    - m_cache : MemoryStore
    - m_offsets : map<int, pair<int, int>>
    - m_msgFileName : string
    - m_headerFileName : string
    - m_seqNumsFileNmae : string
    - m_msgFile : FILE*
    - m_headerFile : FILE*
    - m_seqNumsFile : FILE*
    - m_sessionFile : FILE*
    - -
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    ..
    - open(bool) : void
    - populateCache() : void
    - readFromFile(int, int, string&) : bool
    - setSeqNum() : void
    - setSession() : void
    - get(int, string&) : bool
}

class MemoryStore
{
    ' 成员变量
    - m_messages : map<int, string>
    - m_nextSenderMsgSeqNum : int
    - m_nextTargetMsgSeqNum : int
    - m_creationTime : UtcTimeStamp
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

' 基于mysql的存储实现
class MySQLStoreFactory
{
    ' 成员变量
    - m_connectionPoolPtr : MySQLConnectionPoolPtr
    - m_settings : SessionSettings
    - m_dictionary : Dictionary
    - m_database : string
    - m_password : string
    - m_user : string
    - m_password : string
    - m_host : string
    - m_port : short
    - m_useSettings : bool
    - m_useDictionary : bool
    ' 成员函数
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class MySQLStore
{
    ' 成员变量
    - m_cache : MemoryStore
    - m_pConnection : MySQLConnection*
    - m_pConnectionPool : MySQLConnectionPool*
    - m_sessionID : SessionID
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

class OdbcStoreFactory
{
    ' 成员变量
    - m_dictionary : Dictionary
    - m_settings : SessionSettings
    - m_user : string
    - m_password : string
    - m_connectionString : string
    - m_useSettings : bool
    - m_useDictionary : bool
    ' 成员函数
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class OdbcStore
{
    ' 成员变量
    - m_cache : MemoryStore
    - m_pConnection : OdbcConnection*
    - m_sessionID : SessionID
    ' 成员函数
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    - populateCache() : void
}

' 维护Session类的所有状态
class SessionState
{
    ' 成员变量
    - m_enabled : bool
    - m_receivedLogon : bool
    - m_sentLogout : bool
    - m_sentLogon : bool
    - m_sentReset : bool
    - m_receivedReset : bool
    - m_initiate : bool
    - m_logonTimeout : int
    - m_logoutTimeout : int
    - m_testRequest : int
    - m_resendRange : ResendRange
    - m_heartBtInt : HeartBtInt
    - m_lastSentTime : UtcTimeStamp
    - m_lastReceivedTime : UtcTimeStamp
    - m_logoutReason : string
    - m_queue : map<int, Message>
    - m_pStore : MessageStore*
    - m_pLog : Log*
    - m_nullLog : NullLog
    - m_mutex : Mutex
    ' 成员函数
    - -
    ' 缓存发送过的消息
    - getNextSenderMsgSeqNum() : int
    - getNextTargetMsgSeqNum() : int
    - setNextSenderMsgSeqNum(int) : void
    - setNextTargetMsgSeqNum(int) : void
    - incrNextSenderMsgSeqNum() : void
    - incrNextTargetMsgSeqNum() : void
    - queue(int, const Message&) : void
    - retrieve(int, Message&)
    - clearQueue() : void
    ..
    - onIncoming() : void
    - onOutgoing() : void
    - onEvent() : void
    - reset() : void
    - refresh() : void
    - clear() : void
    - backup() : void
    ..
    ' 以下是根据 Fix 会话中的各种规定进行状态的设置
    - receivedLogon() : bool
    - receivedLogon(bool) : void
    - sentLogout() : bool
    - sentLogout(bool) : void
    - sentLogon() : bool
    - sentLogon(bool) : void
    - receivedReset() : bool
    - receivedReset(bool) : void
    - sentReset() : bool
    - sentReset(bool) : void
    - initiate() : bool
    - initiate(bool) : void
    - logonTimeout() : int
    - logonTimeout(int) : void
    - logoutTimeout() : int
    - logoutTimeout() : void
    - testRequest() : int
    - testRequest(int) : void
    - resendRequested() : bool
    - resendRange() : pair<int, int>
    - resendRage(int, int) : void
    - store() : MessageStore*
    - store(MessageStore) : void
    - log() : Log*
    - log(Log*) : void
    - heartBtInt() : HeartBtInt&
    - heartBtInt() : const HeartBtInt&
    - heartBtInt(cosnt HeartBtInt) : void
    - lastSendTime(const UtcTimeStamp&) : void
    - lastSendTime() : UtcTimeStamp
    - lastReceivedTime(const UtcTimeStamp&) : void
    - lastReceivedTime() : UtcTimeStamp
    - lastReceivedTime() : const UtcTimeStamp
    - shouleSendLogon() : bool
    - alreadySendLogon() : bool
    - logonTimedOut() : bool
    - logoutTimedOut() : bool
    - withinHeartBeat() : bool
    - timedOut() : bool
    - needHeartbeat() : bool
    - needTestRequest() : bool
    - logoutReason() : string
    - logoutReson (const string&) : void
    - set(int, string&) : bool
    - get(int, int, vector<string>&) : void
    - getCreateionTime() : UtcTimeStamp
}
}
' end package

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 以下是注释

note left of FileStore::populateCache
从文件中读出数据
比如：读出序列号，设置到内存中
end note

note left of FileStore::open
1. 先读出文件中的数据写入内存
2. 将内存中的数据同步到文件
有什么意义？
end note

note left of FileStore::"set(int, const string&)"
通信过程中，
实时地将收到的消息写入文件
end note

note left of FileStore::setSeqNum
通信过程中，
实时地将序列号的变更同步到文件
end note

note left of FileStore::setSession
通信过程中，
实时地将会话创建时间的变更同步到文件
end note

note left of Session::"send(const string&)"
发送消息的接口
最终会调用 SocketConnection::send
end note

note left of Session::"generateLogon(const Message&)"
generate* 方法用于构造与发送管理消息
end note

note left of Session::"next()"
用于在长时间没有数据发送时
发送心跳包给对端
end note

note left of Session::"next(const string&, const UtcTimeStamp&, bool = false)"
用于接收并解析消息
回调 Application::to* 方法
end note

note left of Session::"persist(const Message&, const string&)"
发送消息后递增序列号
end note

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 以下是类关系的定义

Session - -> SessionState : contains
FileStore - -> MemoryStore : contains
MySQLStore - -> MemoryStore : contains
OdbcStore - -> MemoryStore : contains

MessageStoreFactory ..> MessageStore 
MessageStoreFactory <|- - FileStoreFactory : implements
MessageStoreFactory <|- - MySQLStoreFactory : implements
MessageStoreFactory <|- - OdbcStoreFactory : implements
MessageStore <|- - FileStore : implements
MessageStore <|- - MySQLStore : implements
MessageStore <|- - OdbcStore : implements
MessageStore <|- - MemoryStore : implements
@enduml

@startuml quickfix_session_fixsession_classmap
package "会话逻辑层" #DDDDDD
{
class Session
{
    - m_application : Application&
    - m_sessionID : SessionID
    - m_state : SessionState
    - m_pResponder : Responder*
    ..
    - m_dataDictionaryProvider : DataDictionaryProvider
    - m_messageStoreFactory : MessageStoreFactory&
    - m_pLogFactory : LogFactory*
    - m_mutex : Mutex
    ..
    {static}- s_sessions : map<SessionID, Session*>
    {static}- s_sessionIDs : set<SessionID>
    {static}- s_registered : map<SessionID, Session*>
    {static}- s_mutex : Mutex
    ..
    - m_sessionTime : TimeRange
    - m_logonTime : TimeRange
    - m_senderDefaultApplVerID : string
    - m_targetDefaultApplVerID : string
    - m_sendRedundantResendRequests : bool
    - m_checkCompId : bool
    - m_checkLatency : bool
    - m_maxLatency : int
    - m_resetOnLogon : bool
    - m_resetOnLogout : bool
    - m_resetOnDisconnect : bool
    - m_refreshOnLogon : bool
    - m_timestampPrecision : int
    - m_persistMessages : bool
    - m_validateLengthAndCheckSum : bool
    - -
    - send(Message&) : bool
    - send(const string&) : bool
    - sendRaw(Message&, int = 0) : bool
    - resend(Message&) : bool
    - shouleSendReset() : bool
    - disconnect() : void
    - generateLogon() : void
    - generateLogon(const Message&) : void
    - generateResendRequest(const BeginString&, const MsgSeqNum&) : void
    - generateSequenceReset(int, int) : void
    - generateHeartbeat() : void
    - generateHeartbeat(const Message&) : void
    - generateTestRequest(const std::string&) : void
    - generateReject(const Message&, int, int = 0) : void
    - generateReject(const Message&, const std::string&) : void
    - generateBusinessReject(const Message&, int, int = 0) : void
    - generateLogout( const std::string&= "") : void
    - populateRejectReason(Message&, int, const std::string&) : void
    - populateRejectReason(Message&, const std::string&) : void
    ..
    - next() : void
    - next(const UtcTimeStamp&) : void
    - next(const string&, const UtcTimeStamp&, bool = false) : void
    - next(const Message&, const UtcTimeStamp&, bool = false) : void
    - verfy(const Message&, bool = true, bool = true) : bool
    - fromCallback(const MsgType&, const Message&, const SessionID&) : void
    - nextLogon(const Message&, const UtcTimeStamp&) : void
    - nextLogout(const Message&, const UtcTimeStamp&) : void
    - nextHeartbeat(const Message&, const UtcTimeStamp&) : void
    - nextTestRequest(const Message&, const UtcTimeStamp&) : void
    - nextReject(const Message&, const UtcTimeStamp&) : void
    - nextSequenceReset(const Message&, const UtcTimeStamp&) : void
    - nextResendRequest(const Message&, const UtcTimeStamp&) : void
    - nextQueued(int, const UtcTimeStamp&) : bool
    - nextQueued(const UtcTimeStamp&) : void
    ..
    - persist(const Message&, const string&) : void
    - setNextSenderMsgSeqNum(int) : void
    - SetNextTargetMsgSeqNum(int) : void
    - getExpectedSenderNum() : int
    - getExpectedTargetNum() : int
    ..
    - doBadTime(const Message&) : void
    - doBadCompID(const Message&) : void
    - doPossDup(const Message&) : bool
    - doTargetTooLow(const Message&) : bool
    - doTargetTooHight(const Message&) : void
    - insertSendingTime(Header&) : void
    - insertOrigSendingTime(Header&, const UtcTimeStamp& = UtcTimeStamp()) : void
    - fill(Header&) : void
    ..
    - reset() : void
    {static}- sendToTarget(Message&, const string& = "") : bool
    {static}- sendToTarget(Message&, cosnt SessionID&) : bool
    {static}- sendToTarget(Message&, const SenderCompID&, const TargetCompID&, const string& = "") : bool
    {static}- sendToTarget(Message&, const string&, const string&, const string& = "") : bool
    {static}- getSessions() : set<SessoinID>
    {static}- lookupSession(const SessionID&) : Session*
    {static}- lookupSession(const string&, bool = false) : Session*
    {static}- isSessionRegistered(const SessionID&) : bool
    {static}- registerSession(const SessionID&) : Session&
    {static}- unregisterSession(const SessionID&)
    {static}- numSessions() : size_t
    {static}- addSession(Sessioni&) : bool
    {static}- removeSession(Session&) : void
    ..
    - logon() : void
    - logout(const string& = "") : void
    - isEnable() : bool
    - sentLogon() : bool
    - sentLogout() : bool
    - receivedLogon() : bool
    - isLoggedOn() : bool
    - refresh() : void
    ..
    {method}- getter & setter
}
}

package "会话状态与序列号管理" #DDDDDD
{
interface MessageStore
{
    {abstract}+ set(int, const string&) : bool
    {abstract}+ get(int, int, vector<string>&) : void
    {abstract}+ getNextSenderMsgSeqNum() : int
    {abstract}+ getNextTargetMsgSeqNum() : int
    {abstract}+ setNextSenderMsgSeqNum(int) : void
    {abstract}+ setNextTargetMsgSeqNum(int) : void
    {abstract}+ incrNextSenderMsgSeqNum() : void
    {abstract}+ incrNextTargetMsgSeqNum() : void
    {abstract}+ getCreateionTime() : UtcTimeStamp
    {abstract}+ reset() : void
    {abstract}+ refresh() : void
}

interface MessageStoreFactory
{
    {abstract}+ create(const SessionID&) : MessageStore*
    {abstract}+ destroy(MessageStore*) : void
}

class FileStoreFactory
{
    - m_path : string
    - m_settings : SessionSettings
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
}

class FileStore
{
    - m_cache : MemoryStore
    - m_offsets : map<int, pair<int, int>>
    - m_msgFileName : string
    - m_headerFileName : string
    - m_seqNumsFileNmae : string
    - m_msgFile : FILE*
    - m_headerFile : FILE*
    - m_seqNumsFile : FILE*
    - m_sessionFile : FILE*
    - -
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    ..
    - open(bool) : void
    - populateCache() : void
    - readFromFile(int, int, string&) : bool
    - setSeqNum() : void
    - setSession() : void
    - get(int, string&) : bool
}

class MemoryStore
{
    - m_messages : map<int, string>
    - m_nextSenderMsgSeqNum : int
    - m_nextTargetMsgSeqNum : int
    - m_creationTime : UtcTimeStamp
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

class MySQLStoreFactory
{
    - m_connectionPoolPtr : MySQLConnectionPoolPtr
    - m_settings : SessionSettings
    - m_dictionary : Dictionary
    - m_database : string
    - m_password : string
    - m_user : string
    - m_password : string
    - m_host : string
    - m_port : short
    - m_useSettings : bool
    - m_useDictionary : bool
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class MySQLStore
{
    - m_cache : MemoryStore
    - m_pConnection : MySQLConnection*
    - m_pConnectionPool : MySQLConnectionPool*
    - m_sessionID : SessionID
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
}

class OdbcStoreFactory
{
    - m_dictionary : Dictionary
    - m_settings : SessionSettings
    - m_user : string
    - m_password : string
    - m_connectionString : string
    - m_useSettings : bool
    - m_useDictionary : bool
    + create(const SessionID&) : MessageStore*
    + destroy(MessageStore*) : void
    - create(const SessionID&, const Dictionary&) : MessageStore*
}

class OdbcStore
{
    - m_cache : MemoryStore
    - m_pConnection : OdbcConnection*
    - m_sessionID : SessionID
    + set(int, const string&) : bool
    + get(int, int, vector<string>&) : void
    + getNextSenderMsgSeqNum() : int
    + getNextTargetMsgSeqNum() : int
    + setNextSenderMsgSeqNum(int) : void
    + setNextTargetMsgSeqNum(int) : void
    + incrNextSenderMsgSeqNum() : void
    + incrNextTargetMsgSeqNum() : void
    + getCreateionTime() : UtcTimeStamp
    + reset() : void
    + refresh() : void
    - populateCache() : void
}

class SessionState
{
    - m_enabled : bool
    - m_receivedLogon : bool
    - m_sentLogout : bool
    - m_sentLogon : bool
    - m_sentReset : bool
    - m_receivedReset : bool
    - m_initiate : bool
    - m_logonTimeout : int
    - m_logoutTimeout : int
    - m_testRequest : int
    - m_resendRange : ResendRange
    - m_heartBtInt : HeartBtInt
    - m_lastSentTime : UtcTimeStamp
    - m_lastReceivedTime : UtcTimeStamp
    - m_logoutReason : string
    - m_queue : map<int, Message>
    - m_pStore : MessageStore*
    - m_pLog : Log*
    - m_nullLog : NullLog
    - m_mutex : Mutex
    - -
    - getNextSenderMsgSeqNum() : int
    - getNextTargetMsgSeqNum() : int
    - setNextSenderMsgSeqNum(int) : void
    - setNextTargetMsgSeqNum(int) : void
    - incrNextSenderMsgSeqNum() : void
    - incrNextTargetMsgSeqNum() : void
    - queue(int, const Message&) : void
    - retrieve(int, Message&)
    - clearQueue() : void
    ..
    - onIncoming() : void
    - onOutgoing() : void
    - onEvent() : void
    - reset() : void
    - refresh() : void
    - clear() : void
    - backup() : void
    ..
    - receivedLogon() : bool
    - receivedLogon(bool) : void
    - sentLogout() : bool
    - sentLogout(bool) : void
    - sentLogon() : bool
    - sentLogon(bool) : void
    - receivedReset() : bool
    - receivedReset(bool) : void
    - sentReset() : bool
    - sentReset(bool) : void
    - initiate() : bool
    - initiate(bool) : void
    - logonTimeout() : int
    - logonTimeout(int) : void
    - logoutTimeout() : int
    - logoutTimeout() : void
    - testRequest() : int
    - testRequest(int) : void
    - resendRequested() : bool
    - resendRange() : pair<int, int>
    - resendRage(int, int) : void
    - store() : MessageStore*
    - store(MessageStore) : void
    - log() : Log*
    - log(Log*) : void
    - heartBtInt() : HeartBtInt&
    - heartBtInt() : const HeartBtInt&
    - heartBtInt(cosnt HeartBtInt) : void
    - lastSendTime(const UtcTimeStamp&) : void
    - lastSendTime() : UtcTimeStamp
    - lastReceivedTime(const UtcTimeStamp&) : void
    - lastReceivedTime() : UtcTimeStamp
    - lastReceivedTime() : const UtcTimeStamp
    - shouleSendLogon() : bool
    - alreadySendLogon() : bool
    - logonTimedOut() : bool
    - logoutTimedOut() : bool
    - withinHeartBeat() : bool
    - timedOut() : bool
    - needHeartbeat() : bool
    - needTestRequest() : bool
    - logoutReason() : string
    - logoutReson (const string&) : void
    - set(int, string&) : bool
    - get(int, int, vector<string>&) : void
    - getCreateionTime() : UtcTimeStamp
}
}


note left of FileStore::populateCache
从文件中读出数据
比如：读出序列号，设置到内存中
end note

note left of FileStore::open
1. 先读出文件中的数据写入内存
2. 将内存中的数据同步到文件
有什么意义？
end note

note left of FileStore::"set(int, const string&)"
通信过程中，
实时地将收到的消息写入文件
end note

note left of FileStore::setSeqNum
通信过程中，
实时地将序列号的变更同步到文件
end note

note left of FileStore::setSession
通信过程中，
实时地将会话创建时间的变更同步到文件
end note

note left of Session::"send(const string&)"
发送消息的接口
最终会调用 SocketConnection::send
end note

note left of Session::"generateLogon(const Message&)"
generate* 方法用于构造与发送管理消息
end note

note left of Session::"next()"
用于在长时间没有数据发送时
发送心跳包给对端
end note

note left of Session::"next(const string&, const UtcTimeStamp&, bool = false)"
用于接收并解析消息
回调 Application::to* 方法
end note

note left of Session::"persist(const Message&, const string&)"
发送消息后递增序列号
end note


Session - -> SessionState : contains
FileStore - -> MemoryStore : contains
MySQLStore - -> MemoryStore : contains
OdbcStore - -> MemoryStore : contains

MessageStoreFactory ..> MessageStore 
MessageStoreFactory <|- - FileStoreFactory : implements
MessageStoreFactory <|- - MySQLStoreFactory : implements
MessageStoreFactory <|- - OdbcStoreFactory : implements
MessageStore <|- - FileStore : implements
MessageStore <|- - MySQLStore : implements
MessageStore <|- - OdbcStore : implements
MessageStore <|- - MemoryStore : implements
@enduml

PlantUML version 1.2022.6(Wed Jun 22 01:34:49 CST 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) Client VM
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>